{"version":3,"sources":["./src/app/layout/header/header.component.html","./src/app/layout/header/header.component.ts","./src/app/directive/sucess-btn.directive.ts","./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/coupen/coupen-list/country.service.ts","./src/app/modules/coupen/coupen.component.html","./src/app/modules/coupen/coupen.component.ts","./src/app/component/shared/create-coupen/create-coupen.component.ts","./src/app/component/shared/create-coupen/create-coupen.component.html","./src/app/model/register/register.component.ts","./src/app/model/register/register.component.html","./src/environments/environment.ts","./src/app/modules/coupen/coupen-list/countries.ts","./src/app/shared/card/card.component.html","./src/app/shared/card/card.component.ts","./src/app/component/buttons/buttons.component.ts","./src/app/component/buttons/buttons.component.html","./src/app/component/float-text/float-text.component.ts","./src/app/component/float-text/float-text.component.html","./src/app/helper/host-lister.service.ts","./src/app/services/http.service.ts","./src/app/services/app.service.ts","./src/app/component/contact/contact.component.ts","./src/app/component/contact/contact.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/coupen/coupen-list/sortable.directive.ts","./src/app/app.module.ts","./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/guard/auth.guard.ts","./src/app/modules/coupen/coupen-list/coupen-list.component.ts","./src/app/modules/coupen/coupen-list/coupen-list.component.html","./src/app/model/add-product/add-product.component.ts","./src/app/model/add-product/add-product.component.html","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/shared/price-mover/price-mover.component.ts","./src/app/shared/price-mover/price-mover.component.html","./src/app/services/auth.service.ts","./src/app/modules/my-orders/order-detail/order-detail.component.ts","./src/app/modules/my-orders/order-detail/order-detail.component.html","./src/app/app-routing.module.ts","./src/app/modules/my-orders/my-orders.component.html","./src/app/modules/my-orders/my-orders.component.ts","./src/app/component/shared/page-setup/page-setup.component.ts","./src/app/component/shared/page-setup/page-setup.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<!-- Navigation -->\n<nav class=\"navbar navbar-default navbar-expand-lg static-top sticky-top shadow mb-1 bg-white rounded pt-0\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"../../../assets/images/logo.svg\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive1\"\n      aria-controls=\"navbarResponsive1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive1\">\n      <ul class=\"navbar-nav ml-auto align-items-center\">\n        <li class=\"nav-item \"><a class=\"nav-link\" routerLink=\"/home\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Home</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/my-orders\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">My Orders</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/coupen\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Coupen</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/contact\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Contact</a></li>\n        <li class=\"dropdown\"><img src=\"../../../assets/images/person.svg\">\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n            aria-expanded=\"false\">{{sellerName}} <span class=\"caret\"></span></a>\n          <ul class=\"dropdown-menu\">\n            <li class=\"dropdown-item\" *ngIf=\"sellerName=='User'\"><a class=\"nav-link\" routerLink=\"/login\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact:true}\">login</a></li>\n            <li class=\"dropdown-item\" *ngIf=\"sellerName!=='User'\" (click)=\"logout()\"><a href=\"#\">Logout</a></li>\n          </ul>\n        </li>\n        <li class=\"nav-item\"> \n          <a class=\"nav-link\" href=\"#\"> <img src=\"../../../assets/images/bell.svg\"></a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  sellerName!: string;\n\n  constructor(private _authService:AuthService) { \n    this._authService.sellername.subscribe(res=>{\n      this.sellerName=res;\n    })\n  }\n\n  ngOnInit(): void {\n   \n  }\n  logout=()=>{\n    this._authService.logout();\n  }\n\n}\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appBtn]'\n})\nexport class AppBtnDirective implements OnInit {\n  @Input() appBtnStaus!: string\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    \n  }\n\n  ngOnInit() {\n    // console.log(this.appBtnStaus);\n    this.changecolor(this.appBtnStaus);\n  }\n\n  changecolor(color: string) {\n    if (color === \"success\") {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', '#6fba47');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'color', 'white');\n    } else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', 'white');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'color', 'black');\n    }\n  }\n}\n\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  HostListener,\n} from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddProductComponent } from \"../../model/add-product/add-product.component\";\nimport { HostListerService } from \"../../helper/host-lister.service\";\nimport { AppService } from \"../../services/app.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NotifierService } from \"angular-notifier\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  screenHeight!: number;\n  screenWidth!: number;\n  productList: any;\n\n  constructor(\n    public _modalService: NgbModal,\n    private _hostListerService: HostListerService,\n    private _appService: AppService,\n    private _activatedRoute: ActivatedRoute,\n    private notifier: NotifierService\n  ) {}\n\n  ngOnInit(): void {\n    this.getScreenSize();\n    this.getAllProduct();\n  }\n\n  _opened: boolean = true;\n  _showBtn: boolean = false;\n\n  _toggleSidebar() {\n    this._opened = !this._opened;\n  }\n\n  getScreenSize() {\n    this.screenHeight = this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n    // /  console.log(this.screenHeight, this.screenWidth);\n    if (this.screenWidth < 576) {\n      this._opened = false;\n      this._showBtn = true;\n    } else {\n      this._opened = true;\n      this._showBtn = false;\n    }\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"]) onResize(event: any) {\n    this.getScreenSize();\n  }\n\n  addProduct = () => {\n    this._modalService.open(AddProductComponent, {\n      size: \"lg\",\n      windowClass: \"custom-class\",\n    });\n  };\n\n  getAllProduct = () => {\n    this._activatedRoute.data.subscribe((res) => {\n      res.data.ReturnValue ? (this.productList = res.data.ReturnType) : \"\";\n    });\n  };\n\n  /**\n   * Upload Banner Image\n   */\n  uploadBanner(file: any) {\n    let fileList = file.currentTarget.files[0];\n    let name = fileList.name;\n    const formData = new FormData();\n    formData.append(\"fileName\", name);\n    formData.append(\"File1\", fileList);\n    this._appService.uploadBannerImage(formData).subscribe((response: any) => {\n      this.notifier.notify(\"success\", response);\n    });\n  }\n\n  /**\n   * Upload Profile Image\n   */\n  uploadProfileImage(file: any) {\n    let fileList = file.currentTarget.files[0];\n    let name = fileList.name;\n    const formData = new FormData();\n    formData.append(\"fileName\", name);\n    formData.append(\"File1\", fileList);\n    this._appService.uploadProfileImage(formData).subscribe((response: any) => {\n      this.notifier.notify(\"success\", response);\n    });\n  }\n}\n","<notifier-container></notifier-container>\n<ng-sidebar-container style=\"height: 100vh;\">\n  <!-- A sidebar -->\n  <ng-sidebar class=\"sidebar\" [(opened)]=\"_opened\" [mode]=\"'push'\">\n    <app-page-setup (opened)=\"_toggleSidebar()\" class=\"shadow\"></app-page-setup>\n  </ng-sidebar>\n\n  <!-- Page content -->\n  <div ng-sidebar-content [animate]=\"false\">\n    <button\n      class=\"border btn-dark\"\n      type=\"button\"\n      (click)=\"_toggleSidebar()\"\n      *ngIf=\"_showBtn\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"container mt-2\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-10 banner-container\">\n          <!-- <img *ngIf=\"sellerDetails.BannerImage\" class=\"img-responsive banner-img\"\n                src=\"domainmt-2sellerDetails.BannerImagemt-2\"> -->\n          <img\n            class=\"banner-img\"\n            src=\"../../../assets/images/seller-bg.svg\"\n            alt=\"Card image\"\n          />\n          <div class=\"camera-icon\">\n            <label for=\"file-input\">\n              <img src=\"../../../assets/images/camera-icon.svg\" class=\"\" />\n            </label>\n            <input\n              id=\"file-input\"\n              type=\"file\"\n              accept=\"image/*\" \n              (change)=\"uploadBanner($event)\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col d-flex\">\n          <!-- <span style=\"border-radius: 29px;\n          background-color: #ABABAB;\n          /* height: fit-content; */\n          width: 30px;\n          height: 30px;\n          display: flex;\n          margin-left: 25%;\n          position: absolute;\n          top: -105px;\n          margin-bottom: -54%;\">\n            <img src=\"../../../assets/images/upload.svg\" height=\"20\" width=\"20\" style=\"    margin-top: 15%;\n            margin-left: 18%;\">\n          </span> -->\n          <div class=\"dummy-img shadow\">\n            <img\n              class=\"\"\n              src=\"../../../assets/images/seller-photo.svg\"\n              alt=\"Card image\"\n            />\n            <div class=\"camera-icon\">\n              <label for=\"file-input\">\n                <img src=\"../../../assets/images/camera-icon.svg\" class=\"\" />\n              </label>\n              <input\n                id=\"file-input\"\n                type=\"file\"\n                accept=\"image/*\" \n                (change)=\"uploadProfileImage($event)\"\n              />\n            </div>\n          </div>\n          <div class=\"seller-details\">\n            <label class=\"sellerName mb-0\">Royal SuperMarket</label>\n            <p class=\"name text-left mb-0\">\n              <small>Flat No 101, first Floor</small>\n            </p>\n            <p class=\"name text-left mb-2\"><small>9992212345</small></p>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"d-flex justify-content-end mr-3\">\n          <img\n            src=\"../../../../assets/images/add.svg\"\n            alt=\"add Product\"\n            style=\"height: 20px;\"\n          />\n          <span\n            class=\"ml-3\"\n            type=\"button\"\n            style=\"color: #6ebe44;\"\n            (click)=\"addProduct()\"\n          >\n            Add Product</span\n          >\n        </div>\n        <ng-container>\n          <app-card [productList]=\"productList\"></app-card>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-sidebar-container>\n","import {Injectable, PipeTransform} from '@angular/core';\n\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\n\nimport {Country} from './country';\nimport {COUNTRIES} from './countries';\nimport {DecimalPipe} from '@angular/common';\nimport {debounceTime, delay, switchMap, tap} from 'rxjs/operators';\nimport {SortColumn, SortDirection} from './sortable.directive';\n\ninterface SearchResult {\n  countries: Country[];\n  total: number;\n}\n\ninterface State {\n  page: number;\n  pageSize: number;\n  searchTerm: string;\n  sortColumn: SortColumn;\n  sortDirection: SortDirection;\n}\n\nconst compare = (v1: string | number, v2: string | number) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n\nfunction sort(countries: Country[], column: SortColumn, direction: string): Country[] {\n  if (direction === '' || column === '') {\n    return countries;\n  } else {\n    return [...countries].sort((a, b) => {\n      const res = compare(a[column], b[column]);\n      return direction === 'asc' ? res : -res;\n    });\n  }\n}\n\nfunction matches(country: Country, term: string, pipe: PipeTransform) {\n  return country.CoupenName.toLowerCase().includes(term.toLowerCase())\n||  country.promoDesc.toLowerCase().includes(term.toLowerCase())\n||  country.CoupenCode.toLowerCase().includes(term.toLowerCase())\n\n    // || pipe.transform(country.promoDesc.toLowerCase()).includes(term.toLowerCase())\n    // || pipe.transform(country.CoupenCode.toLowerCase()).includes(term.toLowerCase());\n}\n\n@Injectable({providedIn: 'root'})\nexport class CountryService {\n  private _loading$ = new BehaviorSubject<boolean>(true);\n  private _search$ = new Subject<void>();\n  private _countries$ = new BehaviorSubject<Country[]>([]);\n  private _total$ = new BehaviorSubject<number>(0);\n\n  private _state: State = {\n    page: 1,\n    pageSize: 5,\n    searchTerm: '',\n    sortColumn: '',\n    sortDirection: ''\n  };\n\n  constructor(private pipe: DecimalPipe) {\n    this._search$.pipe(\n      tap(() => this._loading$.next(true)),\n      debounceTime(200),\n      switchMap(() => this._search()),\n      delay(200),\n      tap(() => this._loading$.next(false))\n    ).subscribe(result => {\n      this._countries$.next(result.countries);\n      this._total$.next(result.total);\n    });\n\n    this._search$.next();\n  }\n\n  get countries$() { return this._countries$.asObservable(); }\n  get total$() { return this._total$.asObservable(); }\n  get loading$() { return this._loading$.asObservable(); }\n  get page() { return this._state.page; }\n  get pageSize() { return this._state.pageSize; }\n  get searchTerm() { return this._state.searchTerm; }\n\n  set page(page: number) { this._set({page}); }\n  set pageSize(pageSize: number) { this._set({pageSize}); }\n  set searchTerm(searchTerm: string) { this._set({searchTerm}); }\n  set sortColumn(sortColumn: SortColumn) { this._set({sortColumn}); }\n  set sortDirection(sortDirection: SortDirection) { this._set({sortDirection}); }\n\n  private _set(patch: Partial<State>) {\n    Object.assign(this._state, patch);\n    this._search$.next();\n  }\n\n  private _search(): Observable<SearchResult> {\n    const {sortColumn, sortDirection, pageSize, page, searchTerm} = this._state;\n\n    // 1. sort\n    let countries = sort(COUNTRIES, sortColumn, sortDirection);\n\n    // 2. filter\n    countries = countries.filter(country => matches(country, searchTerm, this.pipe));\n    const total = countries.length;\n\n    // 3. paginate\n    countries = countries.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n    return of({countries, total});\n  }\n}\n","<ng-sidebar-container style=\"height: 100vh;\">\n    <!-- A sidebar -->\n    <ng-sidebar class=\"sidebar\" [(opened)]=\"_opened\" [mode]=\"'push'\">\n    <app-create-coupen></app-create-coupen>\n    </ng-sidebar>\n  \n    <!-- Page content -->\n    <div ng-sidebar-content [animate]=\"false\">\n      <button class=\"border btn-dark\" type=\"button\" (click)=\"_toggleSidebar()\" *ngIf=\"_showBtn\">\n        <span class=\"navbar-toggler-icon\"></span></button>\n    <app-coupen-list></app-coupen-list>\n    </div>\n  \n  </ng-sidebar-container>","import { Component, HostListener, OnInit } from '@angular/core';\nimport { HostListerService } from \"./../../helper/host-lister.service\";\n@Component({\n  selector: 'app-coupen',\n  templateUrl: './coupen.component.html',\n  styleUrls: ['./coupen.component.scss']\n})\nexport class CoupenComponent implements OnInit {\n  _opened: boolean = true;\n _showBtn: boolean=false;\n screenHeight!: number;\n screenWidth!: number;\n  constructor(private _hostListerService:HostListerService) { }\n\n  ngOnInit(): void {\n    this.getScreenSize();\n  }\n  _toggleSidebar() {\n    this._opened = !this._opened;\n  }\n\n  getScreenSize() {\n    this.screenHeight =  this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n    if (this.screenWidth < 576) {\n      this._opened = false;\n      this._showBtn = true;\n    } else {\n      this._opened = true;\n      this._showBtn = false;\n    }\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(event:any) {\n    this.getScreenSize()\n }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-coupen',\n  templateUrl: './create-coupen.component.html',\n  styleUrls: ['./create-coupen.component.scss']\n})\nexport class CreateCoupenComponent implements OnInit {\n  usageType=['Single','Multiple'];\n  coupenForm!:FormGroup;\n  submitted=false;\n  constructor(\n    private _formBuilder:FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.coupenForm=this._formBuilder.group({\n      name:[\"\",Validators.required],\n      promoType:[\"\",Validators.required],\n      desc:[\"\",Validators.required],\n      amountOff:[\"\",Validators.required],\n      limit:[\"\",Validators.required],\n      userID:[\"\",Validators.required],\n      validFrom:[\"\",Validators.required],\n      toDate:[\"\",Validators.required],\n      usageType:[\"\",Validators.required],\n      coupenCode:[\"\",Validators.required],\n    })\n  }\n  get f(){return this.coupenForm.controls;}\n \n  addCoupen=()=>{\n    \n  }\n\n}\n","<p class=\"text-left font-weight-bold\">Create Coupen</p>\n\n<div class=\"coupen-form\" [formGroup]=\"coupenForm\">\n<div class=\"border rounded-1\">\n      <div class=\"form-group\">\n        <label for=\"Coupen Name\"><small>Name</small> </label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.name.errors.required\">Coupen Name is required</div>\n        </div>\n      </div>\n    \n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"Promo Type\"><small>Promo Type</small> </label>\n        <input type=\"text\" formControlName=\"promoType\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.promoType.errors }\" />\n        <div *ngIf=\"submitted && f.promoType.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.promoType.errors.required\">Promo Type is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"Promo Description\"><small>Promo Description</small> </label>\n        <input type=\"text\" formControlName=\"desc\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.desc.errors }\" />\n        <div *ngIf=\"submitted && f.desc.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.desc.errors.required\">Promo Description is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"amountOff\"><small>Amount</small> </label>\n        <input type=\"text\" formControlName=\"amountOff\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.amountOff.errors }\" />\n        <div *ngIf=\"submitted && f.amountOff.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.amountOff.errors.required\">Amount is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"limit\"><small>Upper Limit</small> </label>\n        <input type=\"text\" formControlName=\"limit\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.limit.errors }\" />\n        <div *ngIf=\"submitted && f.limit.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.limit.errors.required\">Upper Limit is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"userID\"><small>User ID</small> </label>\n        <input type=\"text\" formControlName=\"userID\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.userID.errors }\" />\n        <div *ngIf=\"submitted && f.userID.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.userID.errors.required\">User ID is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"d-flex mt-2 flex-column\">\n        <div class=\"form-group col-md border rounded-1 flex-1\">\n            <label for=\"validFrom\"><small>Valid From</small> </label>\n            <input type=\"date\" formControlName=\"validFrom\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.validFrom.errors }\" />\n            <div *ngIf=\"submitted && f.validFrom.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.validFrom.errors.required\">User ID is required</div>\n            </div>\n          </div>\n  \n          <div class=\"form-group col-md border rounded-1 flex-1 mt-2\">\n            <label for=\"toDate\"><small>Valid Till</small> </label>\n            <input type=\"date\" formControlName=\"toDate\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.toDate.errors }\" />\n            <div *ngIf=\"submitted && f.toDate.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.toDate.errors.required\">User ID is required</div>\n            </div>\n          </div>\n\n</div>\n\n<div class=\"mt-2\">\n    <div class=\"form-group flex-direction-row justify-content-between mr-4\">\n        <label for=\"usageType\"><small>Usage Type</small> </label>\n        <div class=\"form-check checkbox custom-control custom-radio custom-control-inline\"\n        *ngFor=\"let item of usageType\">\n        <input class=\"custom-control-input\" \n        type=\"radio\" name=\"sizeFor\" [id]=\"item\" [value]=\"item\">\n        <label class=\"custom-control-label mt-0 mx-3 pt-0\" [for]=\"item\">\n            {{item}}\n        </label>\n    </div>\n        <div *ngIf=\"submitted && f.usageType.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.usageType.errors.required\">Usage Type is required</div>\n        </div>\n      </div>\n</div>\n\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"coupenCode\"><small>Coupen Code</small> </label>\n        <input type=\"text\" formControlName=\"coupenCode\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.coupenCode.errors }\" />\n        <div *ngIf=\"submitted && f.coupenCode.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.coupenCode.errors.required\">Coupen Code is required</div>\n        </div>\n      </div>\n</div>\n\n<div class=\"mt-3\">\n    <div class=\"col-sm-12\">\n      <div class=\"text-center\">\n        <button class=\"btn create\" (click)=\"addCoupen()\">Create</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from \"@angular/core\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport Stepper from \"bs-stepper\";\nimport { AuthService } from \"../../services/auth.service\";\nimport {\n  delay,\n  exhaustMap,\n  retry,\n  retryWhen,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n} from \"rxjs/operators\";\nimport { NotifierService } from \"angular-notifier\";\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  txtEmail!: string;\n  txtPhone: any;\n  public stepper: Stepper | any;\n  emailIsValid!: boolean;\n  isOtpSend!: boolean;\n  state: any = [];\n  country: any = [];\n  otp: string = \"\";\n  error: string = \"\";\n  message!: string;\n  @ViewChild(\"customNotification\", { static: true })\n  customNotificationTmpl: any;\n  messageType!: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _router: Router,\n    private notifier: NotifierService\n  ) {}\n\n  ngOnInit(): void {\n    this.setStepper();\n    this.initialiseForm();\n    this.setFormValues();\n\n    this.state = this._authService.getState();\n    this.country = this._authService.getCity();\n  }\n\n  initialiseForm = () => {\n    this.registerForm = this.formBuilder.group({\n      UserName: [\"\", Validators.required],\n      MobileNumber: [\"\", Validators.required],\n      ShopName: [\"\", Validators.required],\n      State: [\"\", Validators.required],\n      Email: [\n        \"\",\n        [Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")],\n      ],\n      City: [\"\", Validators.required],\n      Pin: [\"\", Validators.required],\n      AddressLine1: [\"\", Validators.required],\n      AddressLine2: [\"\", Validators.required],\n      AddressLine3: [\"\"],\n      Landmark: [\"\"],\n      Country: [\"\", Validators.required],\n    });\n  };\n\n  setFormValues = () => {\n    this.registerForm.patchValue({\n      State: \"Maharashtra\",\n      Country: \"India\",\n    });\n  };\n\n  setStepper = () => {\n    this.stepper = new Stepper(document.querySelector(\"#stepper1\")!, {\n      linear: true,\n      animation: true,\n    });\n  };\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  register = () => {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this._authService\n      .registerSeller(this.registerForm.value)\n      .pipe()\n      .subscribe(\n        (data) => {\n          localStorage.setItem(\"STOREDETAILS\", JSON.stringify(data));\n          this.notifier.show({\n            message: data.ReturnMessage,\n            type: \"success\",\n            template: this.customNotificationTmpl,\n          });\n          this.loading = false;\n          this._router.navigate([\"/login\"]);\n        },\n        (error) => {\n          this.notifier.show({\n            message: error.error.error_description,\n            type: \"error\",\n            template: this.customNotificationTmpl,\n          });\n          this.loading = false;\n        }\n      );\n  };\n\n  next() {\n    this.stepper.next();\n  }\n\n  test() {\n\n  }\n  sendOtp = (txtEmail: any, txtPhone: any) => {\n    if (txtEmail) {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      this.emailIsValid = !re.test(txtEmail);\n      if (!re.test(txtEmail)) return;\n    }\n    this.isOtpSend = true;\n    const param = {\n      UserName: txtEmail || txtPhone,\n    };\n    this.loading = true;\n    this._authService\n      .generateOTP(param)\n      .pipe(\n        retryWhen((err) =>\n          err.pipe(\n            delay(3000),\n            scan((retrycount) => {\n              if (retrycount >= 1) {\n                throw err;\n              } else {\n                retrycount++;\n                return retrycount;\n              }\n            }, 0)\n          )\n        )\n      )\n      .subscribe((res) => {\n        console.log(res);\n        if (!res.ReturnValue) {\n          this.message = res.ReturnMessage;\n          this.messageType = \"error\";\n        } else {\n          this.loading = false;\n          this.stepper.to(2);\n          this.message = res.ReturnMessage;\n          this.messageType = \"success\";\n        }\n      });\n  };\n\n  onOtpChange = (event: string) => {\n    this.otp = event;\n  };\n\n  authorizeToken = () => {\n    console.log(this.stepper);\n    this.loading = true;\n    const param = {\n      grant_type: \"password\",\n      UserName: this.txtEmail,\n      password: this.otp,\n    };\n    this._authService\n      .authorizeToken(param)\n      .pipe\n      // retryWhen(err =>\n      //   err.pipe(delay(3000), scan((retrycount) => {\n      //     if (retrycount > 1) {\n      //       throw err;\n      //     } else {\n      //       retrycount++;\n      //       return retrycount;\n      //     }\n      //   }, 0)\n      //   ))\n      ()\n      .subscribe(\n        (res) => {\n          console.log(res);\n          localStorage.setItem(\"AUTH_TOKEN\", res.access_token);\n          localStorage.setItem(\"USER\", JSON.stringify(res));\n          this.loading = false;\n          this.message = \"\";\n          this.registerForm.patchValue({\n            UserName: res.userName,\n          });\n          this.next();\n        },\n        (error) => {\n          this.error = error.error.error_description;\n          this.loading = false;\n          this.message = \"\";\n          // console.log(error);\n        }\n      );\n  };\n\n  lastClick(event: any) {\n    console.log(event);\n  }\n}\n","<div class=\"modal-header\">\n  <span class=\"modal-title\">Register</span>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"activeModal.dismiss('Cross click')\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<notifier-container style=\"color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<div class=\"modal-body\">\n  <div class=\"container\">\n    <div id=\"stepper1\" class=\"bs-stepper\">\n      <div class=\"bs-stepper-header\">\n        <div class=\"step\" data-target=\"#test-l-1\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Email</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-2\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Verify OTP</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-3\" (onClick)=\"lastClick($event)\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Register</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"bs-stepper-content\">\n        <form>\n          <div id=\"test-l-1\" class=\"content\">\n            <div class=\"text-center d-flex flex-column align\">\n              <h4 style=\"color: #999999;\">Verify your contact details</h4>\n              <label style=\"color: #999999;\" for=\"exampleInputEmail1\"\n                >OTP will be send on your mail or mobile number for\n                verification</label\n              >\n              <div class=\"form-group\">\n                <input\n                  type=\"email\"\n                  class=\"form-control txt-input\"\n                  placeholder=\"Your Email Id\"\n                  (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n                  aria-label=\"mail\"\n                  [(ngModel)]=\"txtEmail\"\n                  (input)=\"txtPhone =''\"\n                  name=\"txtEmail\"\n                />\n                <label\n                  *ngIf=\"emailIsValid && txtEmail\"\n                  class=\"m-2 d-flex justify-content-center text-danger\"\n                  >Email is not valid\n                </label>\n                <div class=\"separator\">OR</div>\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">+91</span>\n                  </div>\n                  <input\n                    class=\"form-control txt-input txt-phone\"\n                    pattern=\"^[0-9]*$\"\n                    type=\"text\"\n                    maxlength=\"10\"\n                    (input)=\"txtEmail =''\"\n                    (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n                    placeholder=\"1111111111\"\n                    onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57))\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"txtPhone\"\n                    name=\"txtPhone\"\n                  />\n                </div>\n              </div>\n\n              <app-buttons\n                btnType=\"primary\"\n                label=\"Send Otp\"\n                (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n                [isLoading]=\"loading\"\n                [isDisabled]=\"!txtEmail && !txtPhone\"\n              ></app-buttons>\n            </div>\n          </div>\n          <div id=\"test-l-2\" class=\"content\">\n            <div\n              class=\"form-group text-center d-flex flex-column align justify-center-center\"\n            >\n              <div class=\"d-flex align-items-center\">\n                <img\n                  (click)=\"stepper.to(1)\"\n                  src=\".././../../assets/images/back.svg\"\n                  alt=\"My Happy SVG\"\n                />\n                <h4 style=\"color: #999999;\">Verify your contact details</h4>\n              </div>\n\n              <label style=\"color: #999999;\" for=\"exampleInputEmail1\">\n                Please enter OTP we’ve sent you on {{txtPhone ||\n                txtEmail}}</label\n              >\n              <div class=\"m-3\">\n                <ng-otp-input\n                  (onInputChange)=\"onOtpChange($event)\"\n                  [config]=\"{length:4}\"\n                  (keyup.enter)=\"authorizeToken()\"\n                ></ng-otp-input>\n              </div>\n              <label> {{message}}</label>\n\n              <div class=\"d-flex pr-2 pl-2 m-3\">\n                <label class=\"incorrect\">\n                  {{error}}\n                </label>\n\n                <app-buttons\n                  btnType=\"light\"\n                  label=\"Resend\"\n                  (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n                ></app-buttons>\n              </div>\n\n              <app-buttons\n                btnType=\"primary\"\n                label=\"Verify\"\n                (onClick)=\"authorizeToken()\"\n                [isLoading]=\"loading\"\n                [isDisabled]=\"otp.length < 4\"\n              ></app-buttons>\n            </div>\n          </div>\n          <div id=\"test-l-3\" class=\"content text-center\">\n            <!-- <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button> -->\n\n            <form class=\"mt-2\" [formGroup]=\"registerForm\">\n              <div class=\"container register-form\">\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"UserName\">User Name</label>\n                      <input\n                        type=\"text\"\n                        [attr.disabled]=\"true\"\n                        formControlName=\"UserName\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.UserName.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.UserName.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"MobileNumber\">Mobile Number</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"MobileNumber\"\n                        pattern=\"^[0-9]*$\"\n                        type=\"text\"\n                        maxlength=\"10\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.MobileNumber.errors }\"\n                        onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n                          (event.charCode >= 48 && event.charCode <= 57))\"\n                        autocomplete=\"off\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.MobileNumber.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.MobileNumber.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine1\">Address 1</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine1\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine1.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine1.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine1.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine2\">Address 2</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine2\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine2.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine2.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine2.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine3\">Address 3</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine3\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine3.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine3.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine3.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Landmark\">Landmark</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"Landmark\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Landmark.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Landmark.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Landmark.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"ShopName\">Shop Name</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"ShopName\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.ShopName.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.ShopName.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.ShopName.errors.required\">\n                          Shop Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"State\">State</label>\n\n                      <ng-select\n                        [items]=\"state\"\n                        formControlName=\"State\"\n                        bindLabel=\"name\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.State.errors }\"\n                      >\n                      </ng-select>\n                      <div\n                        *ngIf=\"submitted && f.State.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.State.errors.required\">\n                          State is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Email\">Email</label>\n                      <input\n                        type=\"email\"\n                        formControlName=\"Email\"\n                        ngbAutoFocus\n                        class=\"form-control\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Email.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Email.errors.required\">\n                          Email is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"City\">City</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"City\"\n                        class=\"form-control\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.City.errors }\"\n                      />\n                      <!-- <div *ngIf=\"submitted && f.City.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.City.errors.required\">City is required</div>\n                        </div> -->\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Country\">Country</label>\n\n                      <ng-select\n                        formControlName=\"Country\"\n                        bindLabel=\"Country\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Country.errors }\"\n                      >\n                        <ng-option *ngFor=\"let item of country\" [value]=\"item\">\n                          {{item}}\n                        </ng-option>\n                      </ng-select>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label for=\"Pin\">Pin</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"Pin\"\n                        class=\"form-control\"\n                        pattern=\"^[0-9]*$\"\n                        type=\"text\"\n                        maxlength=\"6\"\n                        onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n                        (event.charCode >= 48 && event.charCode <= 57))\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Pin.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Pin.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Pin.errors.required\">Zip is required</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"modal-footer form-group\">\n                <app-buttons\n                  btnType=\"secondary\"\n                  label=\"Back\"\n                  (onClick)=\"stepper.to(1)\"\n                ></app-buttons>\n\n                <app-buttons\n                  btnType=\"secondary\"\n                  label=\"Cancel\"\n                  (onClick)=\"activeModal.dismiss('Cross click')\"\n                ></app-buttons>\n\n                <app-buttons\n                  btnType=\"primary\"\n                  label=\"Register\"\n                  (onClick)=\"register()\"\n                  [isLoading]=\"loading\"\n                  [isDisabled]=\"!registerForm.valid\"\n                ></app-buttons>\n\n                <!-- <button\n                  [disabled]=\"registerForm.valid\"\n                  class=\"btn reg\"\n                  (click)=\"register()\"\n                  appBtn\n                  [appBtnStaus]=\"'success'\"\n                >\n                  <span\n                    *ngIf=\"loading\"\n                    class=\"spinner-border spinner-border-sm mr-1\"\n                  ></span>\n                  Register\n                </button> -->\n              </div>\n            </form>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'https://business-test-merasupermarket.azurewebsites.net/api/',\n  authUrl:'https://business-test-merasupermarket.azurewebsites.net/api-test/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Country} from './country';\n\nexport const COUNTRIES: Country[] = [\n  {\n  CoupenName:\"test1\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"On shopping of Rs 1500 and more\",\namountOff:60,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF1\"\n  },\n  {\n  CoupenName:\"test2\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"On shopping of Rs 1500 and more\",\namountOff:109,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF2\"\n  },\n  {\n    CoupenName:\"test3\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc3\",\namountOff:9,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF3\"\n  },\n  {\n    CoupenName:\"test4\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc4\",\namountOff:99,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF4\"\n  },\n  {\n    CoupenName:\"test5\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc5\",\n    amountOff:9988,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF5\"\n  },\n  {\n    CoupenName:\"test6\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc6\",\n    amountOff:7,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF6\"\n  },\n  {\n    CoupenName:\"test7\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc7\",\n    amountOff:7,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF7\"\n  },\n  {\n    CoupenName:\"test8\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc8\",\n    amountOff:8,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF8\"\n  },\n  {\n    CoupenName:\"test9\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc\",\namountOff:5,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF9\"\n  },\n  {\n    CoupenName:\"test9\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc\",\namountOff:50,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF10\"\n  },\n  {\n    CoupenName:\"test10\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc10\",\n    amountOff:500,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF11\"\n  },\n  {\n    CoupenName:\"test11\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc11\",\n    amountOff:50,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF12\"\n  },\n  {\n    CoupenName:\"test12\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc12\",\namountOff:60,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF13\"\n  }\n];\n","<div class=\"row d-flex justify-content-center\">\n    <section class=\"card shadow flex-1\" *ngFor=\"let item of productList\">\n      <img src=\"../../../assets/images/product-default.svg\" class=\"card-img-top\" alt=\"...\">\n      <div class=\"card-body\">\n        <p class=\"card-text mb-2\">{{item.Title}}</p>\n        <div class=\"d-flex\">\n          <p class=\"card-text font-weight-bold m-0\">₹ {{item.SellingPrice}}</p>\n          <p class=\"card-text m-0 ml-3\"><s>₹ {{item.MRP}}</s></p>\n        </div>\n        <p class=\"card-text m-0 ml-3 mb-2 save\" style=\"color: #f89838;\">Save ₹ {{item.MRP-item.SellingPrice}}</p>\n        <button class=\"btn btn-lg btn-block edit\">Edit</button>\n      </div>\n    </section>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n@Input() productList: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    // console.log(this.productList);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-buttons\",\n  templateUrl: \"./buttons.component.html\",\n  styleUrls: [\"./buttons.component.scss\"],\n})\nexport class ButtonsComponent implements OnInit {\n  @Input() label: string = \"\";\n  @Input() btnType: string = \"\";\n  @Input() isLoading: boolean = false;\n  @Input() isDisabled: boolean = true;\n  @Output() onClick = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onClickButton(event: any) {\n    this.onClick.emit(event);\n  }\n}\n","<button\n  type=\"button\"\n  class=\"btn light\"\n  *ngIf=\"btnType === 'light'\"\n  (click)=\"onClickButton($event)\"\n>\n  {{ label }}\n</button>\n\n<button\n  type=\"button\"\n  class=\"btn primary\"\n  *ngIf=\"btnType === 'primary'\"\n  (click)=\"onClickButton($event)\"\n  [disabled]=\"isDisabled\"\n>\n  <span\n    *ngIf=\"isLoading\"\n    class=\"spinner-border spinner-border-sm mr-4\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  ></span\n  >{{ label }}\n</button>\n\n<button (click)=\"onClickButton($event)\" class=\"btn secondary\"   *ngIf=\"btnType === 'secondary'\">\n  {{ label }}\n</button>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-float-text\",\n  templateUrl: \"./float-text.component.html\",\n  styleUrls: [\"./float-text.component.scss\"],\n})\nexport class FloatTextComponent implements OnInit {\n  isEdit: boolean = true;\n  @Input() label: string = \"\";\n  @Input() value: string = \"\";\n  @Input() type:string=\"\";\n  @Input() errorMsg:string=\"\"\n  @Output() onChange = new EventEmitter();\n  \n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.onChange.emit(this.value);\n  }\n  /**\n   * Change\n   */\n  getValue(event:any){\n    this.value = event.currentTarget.value;\n    this.onChange.emit(event.currentTarget.value);\n  }\n}\n","<div class=\"border rounded-1\">\n  <p class=\"mb-0\">\n    <small>{{label}}</small>\n    <img\n      src=\"../../../../assets/images/pencil-alt-solid.svg\"\n      class=\"float-right\"\n      (click)=\"isEdit = !isEdit\"\n      *ngIf=\"isEdit\"\n    />\n    <img\n      src=\"../../../../assets/images/selected.svg\"\n      class=\"float-right\"\n      (click)=\"isEdit = !isEdit\"\n      *ngIf=\"!isEdit\"\n    />\n  </p>\n  <p class=\"name\" *ngIf=\"isEdit\">{{value}}</p>\n  <textarea\n    type=\"text\"\n    *ngIf=\"!isEdit && type === 'textArea'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n  ></textarea>\n\n  <input\n    type=\"tel\"\n    *ngIf=\"!isEdit && type === 'number'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n    maxlength=\"10\"\n  />\n\n  <input\n    type=\"text\"\n    *ngIf=\"!isEdit && type === 'text'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n  />\n  <label *ngIf=\"errorMsg\">{{errorMsg}}</label>\n</div>\n","import { HostListener, Injectable } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HostListerService {\n  screenWidth!: number;\n  screenHeight!: number;\n\n  constructor() { }\n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    //console.log(this.screenHeight, this.screenWidth);\n   return {\n    screenHeight:this.screenHeight,\n    screenWidth: this.screenWidth\n   }\n  }\n\n  counter=()=>{\n    return interval(1000).pipe(take(30)); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { Observable, throwError } from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\nAUTH_TOKEN='auth_token';\n  constructor(private httpClient:HttpClient) { }\n\n  get(url: string, params?: any,headers?:any): Observable<any> {\n    const data = { headers: headers};\n    return this.httpClient\n      .get(url, data).\n\t  pipe(catchError(this.errorHandler.bind(this)));\n  }\n  \n  post(url: string, params?: any,headers?:any): Observable<any> {\n    // const data = {params, headers: this.getAuthHeader()};\n    return this.httpClient\n      .post(url, params,headers).\n\t  pipe(catchError(this.errorHandler.bind(this)));\n  }\n\n  private errorHandler(response: any) {\n    const error = response.error;\n    const keys = Object.keys(error);\n    const key = keys[0];\n    let message = error[key];\n    if (response.status === 401) {\n      // auth token delete\n      // redirect login page\n    }\n    if (error[key] instanceof Array) {\n      message = error[key][0];\n    }\n    if (key === 'isTrusted') {\n      // this will occur when not connected to internet\n    } else {\n      message = key + ' : ' + message;\n    }\n    // call snackbar and show error with message\n    return throwError({messages: message, error});\n  }\n\n  private getAuthHeader(): { [header: string]: string | string[]; } {\n    return {\n      Authorization: `Bearer ${localStorage.getItem(this.AUTH_TOKEN)}`\n    };\n  }\n}\n","import { HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpService } from \"./http.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AppService {\n  baseUrl = environment.baseUrl;\n  authUrl = environment.authUrl;\n  constructor(private _httpService: HttpService) {}\n\n  getAllProducts = () => {\n    // return this._httpService.get(environment.authUrl + 'Product','',  this.getAuthHeader());\n    return this._httpService.get(\"https://api.mocki.io/v1/32dcb2df\");\n  };\n  private getAuthHeader = () => {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n    });\n    return headers;\n  };\n\n  /**\n   * Validate Unique Id\n   */\n  validateUniqueId = (id: any) => {\n    return this._httpService.get(\n      environment.authUrl + \"Seller/ValidateUniqueId\",\n      id,\n      this.getAuthHeader()\n    );\n  };\n\n  /**\n   * Upload Banner Image\n   */\n  uploadBannerImage = (payload: any) => {\n    return this._httpService.post(\n      environment.authUrl + \"FileLoad/UploadBannerImage\",\n      payload,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  /**\n   * Upload Profile Image\n   */\n  uploadProfileImage = (payload: any) => {\n    return this._httpService.post(\n      environment.authUrl + \"FileLoad/UploadProfileImage\",\n      payload,\n      { headers: this.getAuthHeader() }\n    );\n  };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'seller-app';\n  showHead: boolean = false;\n\n\n\n  constructor(private router: Router, private _authService: AuthService) {\n    router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n        if (event['url'] == '/login') {\n          this.showHead = false;\n        } else {\n          this.showHead = true;\n        }\n      }\n    });\n  }\n  ngOnInit() {\n    // this._authService.refreshToken().subscribe(res=>{\n    //   console.log(res);\n    //   localStorage.setItem('USER',res);\n    // },error=>{\n    //   if(error.error.error=='invalid_grant')\n    //   this.router.navigate(['/login']);\n    // });\n  }\n}\n","<ngx-loading-bar [color]=\"'#f89838 '\"></ngx-loading-bar>\n<app-header *ngIf=\"showHead\"></app-header>\n<div class=\"my-router-outlet\">\n    <router-outlet></router-outlet>\n</div>\n<!-- <app-footer>\n</app-footer> -->\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {Country} from './country';\n\nexport type SortColumn = keyof Country | '';\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\n\nexport interface SortEvent {\n  column: SortColumn;\n  direction: SortDirection;\n}\n\n@Directive({\n  selector: 'th[sortable]',\n  host: {\n    '[class.asc]': 'direction === \"asc\"',\n    '[class.desc]': 'direction === \"desc\"',\n    '(click)': 'rotate()'\n  }\n})\nexport class NgbdSortableHeader {\n\n  @Input() sortable: SortColumn = '';\n  @Input() direction: SortDirection = '';\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  rotate() {\n    this.direction = rotate[this.direction];\n    this.sort.emit({column: this.sortable, direction: this.direction});\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { NotifierModule, NotifierOptions } from \"angular-notifier\";\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TagInputModule } from 'ngx-chips';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './modules/login/login.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { RegisterComponent } from './model/register/register.component';\nimport { HomeComponent } from './modules/home/home.component';\nimport { MyOrdersComponent } from './modules/my-orders/my-orders.component';\nimport { CoupenComponent } from './modules/coupen/coupen.component';\nimport { ContactComponent } from './component/contact/contact.component';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { SidebarModule } from 'ng-sidebar';\nimport { NgbdSortableHeader } from './modules/coupen/coupen-list/sortable.directive';\nimport { PageSetupComponent } from './component/shared/page-setup/page-setup.component';\nimport { AddProductComponent } from './model/add-product/add-product.component';\n\nimport { AuthService } from \"./services/auth.service\";\nimport { HostListerService } from \"./helper/host-lister.service\";\nimport { OrderDetailComponent } from './modules/my-orders/order-detail/order-detail.component';\nimport { CreateCoupenComponent } from './component/shared/create-coupen/create-coupen.component';\nimport { CoupenListComponent } from './modules/coupen/coupen-list/coupen-list.component';\nimport { AppBtnDirective } from './directive/sucess-btn.directive';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { CardComponent } from './shared/card/card.component';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { PriceMoverComponent } from './shared/price-mover/price-mover.component';\nimport { ButtonsComponent } from './component/buttons/buttons.component';\nimport { FloatTextComponent } from './component/float-text/float-text.component';\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n    horizontal: {\n      position: \"right\",\n      distance: 50,\n    },\n    vertical: {\n      position: \"top\",\n      distance: 50,\n      gap: 10,\n    },\n  },\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    RegisterComponent,\n    HomeComponent,\n    MyOrdersComponent,\n    CoupenComponent,\n    ContactComponent,\n    PageSetupComponent,\n    AddProductComponent,\n    OrderDetailComponent,\n    CreateCoupenComponent,\n    CoupenListComponent,\n    NgbdSortableHeader,\n    AppBtnDirective,\n    FooterComponent,\n    CardComponent,\n    PriceMoverComponent,\n    ButtonsComponent,\n    FloatTextComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    NgOtpInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxFileDropModule,\n    SidebarModule.forRoot(),\n    NotifierModule.withConfig(customNotifierOptions),\n    TagInputModule,\n    BrowserAnimationsModule,\n    LoadingBarModule,\n    NgSelectModule,\n    LoadingBarHttpClientModule\n  ],\n  providers: [AuthService, HostListerService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [],\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal, NgbModalConfig } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AuthService } from \"../../services/auth.service\";\nimport {\n  delay,\n  exhaustMap,\n  retry,\n  retryWhen,\n  scan,\n  map,\n  share,\n  shareReplay,\n  switchMap,\n  startWith,\n  take,\n} from \"rxjs/operators\";\nimport { NotifierService } from \"angular-notifier\";\nimport { RegisterComponent } from \"../../model/register/register.component\";\nimport { interval, Subscription, timer } from \"rxjs\";\nimport { HostListerService } from \"src/app/helper/host-lister.service\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n  providers: [NgbModalConfig],\n})\nexport class LoginComponent implements OnInit {\n  isOtpSend = false;\n  txtEmail: any;\n  txtPhone: any;\n  name: any;\n  email: any;\n  emailIsValid = false;\n  loading = false;\n  counterValue = 30;\n  @ViewChild(\"customNotification\", { static: true })\n  customNotificationTmpl: any;\n  error: any;\n  otp: any;\n  countSubscribe!: Subscription;\n  responseMessage: string = \"\";\n  isEmailMode: boolean = false;\n  isOtpValid: boolean = true;\n\n  constructor(\n    public modalService: NgbModal,\n    private _router: Router,\n    config: NgbModalConfig,\n    private _authService: AuthService,\n    private _hs: HostListerService,\n    private notifier: NotifierService\n  ) {\n    config.backdrop = \"static\";\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {}\n\n  sendOtp = (txtEmail: any, txtPhone: any) => {\n    if (txtEmail) {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      this.emailIsValid = !re.test(txtEmail);\n      if (!re.test(txtEmail)) return;\n    }\n\n    this.countSubscribe = this._hs.counter().subscribe((res) => {\n      this.counterValue = 30;\n      this.counterValue = this.counterValue - (res + 1);\n    });\n\n    this.loading = true;\n    const param = {\n      UserName: txtEmail || txtPhone,\n    };\n    this._authService\n      .generateOTP(param)\n      .pipe(\n        retryWhen((err) =>\n          err.pipe(\n            delay(3000),\n            scan((retrycount) => {\n              if (retrycount >= 1) {\n                throw err;\n              } else {\n                retrycount++;\n                return retrycount;\n              }\n            }, 0)\n          )\n        )\n      )\n      .subscribe(\n        (res) => {\n          this.countSubscribe.unsubscribe();\n          this.isOtpSend = true;\n          this.responseMessage = res.ReturnMessage;\n          this.loading = false;\n        },\n        (error) => {\n          this.error = error.error.error_description;\n          this.loading = false;\n        }\n      );\n  };\n\n  resendOtp(event: any) {\n    this.isOtpSend = false;\n  }\n\n  authorizeToken = () => {\n    this.loading = true;\n    const param = {\n      grant_type: \"password\",\n      UserName: this.txtEmail || this.txtPhone,\n      password: this.otp,\n    };\n    this._authService\n      .authorizeToken(param)\n      .pipe()\n      .subscribe(\n        (res) => {\n          localStorage.setItem(\"AUTH_TOKEN\", res.access_token);\n          localStorage.setItem(\"USER\", JSON.stringify(res));\n          this.loading = false;\n          this._router.navigate([\"/home\"]);\n          this._authService.sellername.next(res.storeName);\n        },\n        (error) => {\n          this.responseMessage = error.error.error_description;\n          this.error = error.error.error_description;\n          this.loading = false;\n\n          // console.log(error);\n        }\n      );\n  };\n\n  register() {\n    this.modalService.open(RegisterComponent, {\n      size: \"lg\",\n      windowClass: \"custom-class\",\n      backdrop: \"static\",\n      keyboard: false,\n    });\n    //modalRef.componentInstance.src = link;\n  }\n  onOtpChange = (event: any) => {\n    this.otp = event;\n    this.isOtpValid = this.otp.length !== 4;\n  };\n}\n","<!-- Navigation -->\n<notifier-container style=\"color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<nav\n  class=\"navbar navbar-default navbar-expand-lg static-top bg-white rounded pt-0\"\n>\n  <div class=\"wrapper container col-md-12 col-sm-12\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"../../../assets/images/logo.svg\" />\n    </a>\n    <div>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item mr-5\">\n          <a class=\"nav-link\" href=\"#\">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<div class=\"container login-div p-0\">\n  <div>\n    <img class=\"svg-image\" src=\"../../../assets/images/bg.svg\" />\n  </div>\n  <div class=\"container welcome-div col-md-5 col-sm-5 col-sm\">\n    <section class=\"welcome-header\">\n      <h2>Welcome to</h2>\n      <h2 class=\"welcome\">Mera Super Market</h2>\n    </section>\n    <label class=\"otp\"\n      >OTP will be send on your mail or mobile number for verification</label\n    >\n    <div *ngIf=\"!isOtpSend\">\n      <h3>Login</h3>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        placeholder=\"Your Email Id\"\n        aria-label=\"mail\"\n        [(ngModel)]=\"txtEmail\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n        required\n        name=\"txtEmail\"\n        (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n        (input)=\"txtPhone =''\"\n      />\n\n      <label\n        *ngIf=\"emailIsValid && txtEmail\"\n        class=\"m-2 d-flex justify-content-center text-danger\"\n        >Email is not valid\n      </label>\n      <div class=\"separator\">OR</div>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">+91</span>\n        </div>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          pattern=\"^[0-9]*$\"\n          type=\"text\"\n          maxlength=\"10\"\n          placeholder=\"1111111111\"\n          (input)=\"txtEmail =''\"\n          (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n          onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n            (event.charCode >= 48 && event.charCode <= 57))\"\n          autocomplete=\"off\"\n          [(ngModel)]=\"txtPhone\"\n          name=\"txtPhone\"\n        />\n      </div>\n      <label class=\"d-flex justify-content-center\"\n        >Resend code in 0:{{counterValue}}</label\n      >\n      <app-buttons\n        btnType=\"primary\"\n        label=\"Send Otp\"\n        (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n        [isLoading]=\"loading\"\n        [isDisabled]=\"!txtEmail && !txtPhone\"\n      ></app-buttons>\n\n      <label class=\"d-flex justify-content-center\">\n        Dont have account?\n        <span class=\"reg-link ml-2 pointer\" (click)=\"register()\"\n          >Register</span\n        ></label\n      >\n    </div>\n    <div class=\"verify-otp\" *ngIf=\"isOtpSend\">\n      <div class=\"d-flex align-items-center\">\n        <img\n          (click)=\"isOtpSend=false\"\n          src=\".././../../assets/images/back.svg\"\n          alt=\"My Happy SVG\"\n        />\n        <h5 class=\"verify-lbl ml-4\">Verify Mobile Number</h5>\n      </div>\n      <label class=\"mt-2 d-flex justify-content-center\"\n        >Please enter OTP we’ve sent you on\n      </label>\n\n      <label class=\"mt-2 d-flex justify-content-center\">\n        <!-- (+91) {{txtPhone}} -->\n        {{txtEmail||txtPhone}}\n      </label>\n\n      <div class=\"sm-device\">\n        <ng-otp-input\n          (onInputChange)=\"onOtpChange($event)\"\n          [config]=\"{length:4}\"\n          (keyup.enter)=\"authorizeToken()\"\n        ></ng-otp-input>\n      </div>\n      <label class=\"mt-2 d-flex justify-content-center\"\n        >{{ responseMessage}}\n      </label>\n\n      <div class=\"d-flex pr-2 pl-2\">\n        <app-buttons\n          btnType=\"light\"\n          label=\"Resend\"\n          (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n        ></app-buttons>\n      </div>\n\n      <app-buttons\n        btnType=\"primary\"\n        label=\"Verify\"\n        (onClick)=\"authorizeToken()\"\n        [isLoading]=\"loading\"\n        [isDisabled]=\"isOtpValid\"\n      ></app-buttons>\n\n      <label class=\"d-flex justify-content-center register\">\n        Dont have account?\n        <app-buttons\n          btnType=\"light\"\n          label=\"Register\"\n          (onClick)=\"register()\"\n        ></app-buttons>\n      </label>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor( private _au:AuthService,private router:Router){\n\n  }\n  canActivate():boolean{\n    if(this._au.isLoggedIn()) {\n      return true;\n    } else{\n      this.router.navigate(['/login']);\n     return false;\n    }\n  }\n \n \n  \n}\n","import { Component, OnInit,QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\nimport {Observable} from 'rxjs';\n\nimport {Country} from './country';\nimport {CountryService} from './country.service';\nimport {NgbdSortableHeader, SortEvent} from './sortable.directive'\n\n@Component({\n  selector: 'app-coupen-list',\n  templateUrl: './coupen-list.component.html',\n  styleUrls: ['./coupen-list.component.scss'],\n  encapsulation:ViewEncapsulation.None,\n  providers: [CountryService, DecimalPipe]\n})\nexport class CoupenListComponent implements OnInit {\n  countries$: Observable<Country[]>;\n  total$: Observable<number>;\n  \n  @ViewChildren(NgbdSortableHeader) headers!: QueryList<NgbdSortableHeader>;\n  constructor(public service: CountryService) {\n    this.countries$ = service.countries$;\n    this.total$ = service.total$;\n  }\n  onSort({column, direction}: SortEvent) {\n    // resetting other headers\n    this.headers.forEach(header => {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n\n    this.service.sortColumn = column;\n    this.service.sortDirection = direction;\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"m-3\">\n  <div class=\"form-group form-inline d-flex\">\n      <p class=\"flex-grow-1 justify-content-center\"> Coupon Records </p>\n      <input class=\"form-control ml-2 search-input shadow-sm\" placeholder=\"search\" type=\"text\" name=\"searchTerm\" [(ngModel)]=\"service.searchTerm\"/>\n      <!-- <span class=\"ml-3\" *ngIf=\"service.loading$ | async\">Loading...</span> -->\n  </div>\n\n  <table class=\"table\">\n    <thead> \n    <tr class=\"card shadow tbl-header\">\n      <th scope=\"col\">Coupon Name</th>\n      <th scope=\"col\">Number To Redeem</th>\n      <th scope=\"col\" class=\"promoDesc\">Promo Desc</th>\n      <th scope=\"col\" sortable=\"amountOff\" (sort)=\"onSort($event)\">Amount Off</th>\n      <th scope=\"col\" sortable=\"upperLimit\" (sort)=\"onSort($event)\">Upper Limit</th>\n      <th scope=\"col\" sortable=\"validFrom\" (sort)=\"onSort($event)\">Valid From</th>\n      <th scope=\"col\" sortable=\"validTill\" (sort)=\"onSort($event)\">Valid Till</th>\n      <th scope=\"col\" sortable=\"userID\" (sort)=\"onSort($event)\">User ID</th>\n      <th scope=\"col\" sortable=\"usageType\" (sort)=\"onSort($event)\">Usage Type</th>\n      <th scope=\"col\">CoupenCode</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let country of countries$ | async\" >\n      <td><ngb-highlight [result]=\"country.CoupenName\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.NumberToRedeem\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.promoDesc\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.amountOff | number\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.upperLimit\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.validFrom\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.validTill\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.userID\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.usageType\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.CoupenCode\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"card shadow\" style=\"width: auto; margin: 0 auto;\">\n  <div class=\"d-flex justify-content-between card-header\">\n      <div>\n   <label class=\"lbl\">Rows Per Page: </label>\n    <select class=\"cust-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"service.pageSize\">\n        <option [ngValue]=\"5\">5</option>\n        <option [ngValue]=\"10\">10</option>\n        <option [ngValue]=\"20\">20</option>\n        <option [ngValue]=\"25\">25</option>\n      </select>\n    </div>\n    <ngb-pagination\n      [collectionSize]=\"(total$ | async)!\" [(page)]=\"service.page\" [pageSize]=\"service.pageSize\">\n    </ngb-pagination>\n    \n  </div>\n</div>\n</form>\n","import { AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NotifierService } from 'angular-notifier';\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl, FormArray, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry, } from 'ngx-file-drop';\n\ninterface ICustomer {\n  key: string;\n  value: string;\n}\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AddProductComponent implements OnInit, AfterViewInit {\n  @ViewChild(\"customNotification\", { static: true }) customNotificationTmpl: any;\n  addProductForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  public files: NgxFileDropEntry[] = [];\n  images: any = [];\n  img: any;\n  time!: number;\n  specifications: ICustomer[] = [];\n  key!: string;\n  value!: string;\n  isError=false;\n  constructor(public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private sanitizer: DomSanitizer, private notifier: NotifierService) { }\n  tag = ['Pizza', 'Pasta', 'Parmesan'];\n  size = ['S', 'M', 'L'];\n  sizeFor = ['Men', 'Women', 'kid'];\n  gender = ['Boys', 'Girls'];\n  status = ['In Stock', 'Out of Stock'];\n  shippableProductStatus = ['Yes', 'No'];\n  deliveryOption = [\n  { \n    name: 'Pick up',\n    value:true\n  },\n  { \n    name: 'Delivery',\n    value:false\n  }]\n  ngOnInit(): void {\n    this.addProductForm = this.formBuilder.group({\n      Title: [\"\", Validators.required],\n      ProductId: [\"\"],\n      SellingPrice: [100, Validators.required],\n      MRP: [100, Validators.required],\n      Tags: [\"\", Validators.required],\n      Description: [\"\", Validators.required],\n      Delivery: [\"\", Validators.required],\n      ShippingCost: [100, Validators.required],\n      Size: [\"\", Validators.required],\n      Color: [\"\", Validators.required],\n      BrandName: [\"\", Validators.required],\n      GST:[\"\"],\n      MaxItemInOneShipment:[\"\"],\n      Category: [\"\", Validators.required],\n      Target:[\"\"],\n\n\n      sizeFor: [\"\", Validators.required],\n      AvailabilityStatus: [\"\", Validators.required],\n      Specification: [\"\", Validators.required],\n      shipStatus: [\"\", Validators.required],\n     \n\n    })\n  }\n  ngAfterViewInit() {\n\n  }\n  get f() { return this.addProductForm.controls; }\n\n  addProduct = () => {\n    this.submitted = true;\nconsole.log(this.addProductForm.value);\n    // stop here if form is invalid\n    if (this.addProductForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    // this.userService.addProduct(this.addProductForm.value)\n    //     .pipe(first())\n    //     .subscribe(\n    //         data => {\n    //             this.alertService.success('Registration successful', true);\n    //             this.router.navigate(['/login']);\n    //         },\n    //         error => {\n    //             this.alertService.error(error);\n    //             this.loading = false;\n    //         });\n  }\n  public dropped(files: NgxFileDropEntry[]) {\n    if (files.length > 4) {\n      this.notifier.show({\n        message: \"Cannot add more than 4 Files at a time.\",\n        type: \"error\",\n        template: this.customNotificationTmpl\n      });\n\n    } else {\n      // this.files = files;\n      this.imageDropped(files);\n      for (const droppedFile of files) {\n\n        // Is it a file?\n        if (droppedFile.fileEntry.isFile && this.isFileAllowed(droppedFile.fileEntry.name)) {\n\n          const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n          fileEntry.file((file: File) => {\n\n            if (this.isFileSizeAllowed(file.size)) {\n              //files array is used to display\n              //the files to the user which will be uploaded\n              this.files.push(droppedFile);\n              if (this.files.length < 6) {\n\n                // Here you can access the real file\n                console.log(droppedFile.relativePath, file);\n                const formData = new FormData()\n                //   this.formData.append(`img${this.index}`, file, droppedFile.relativePath);\n                //  this.index++;\n\n                /**\n                // You could upload it like this:\n                const formData = new FormData()\n                formData.append('logo', file, relativePath)\n       \n                // Headers\n                const headers = new HttpHeaders({\n                  'security-token': 'mytoken'\n                })\n       \n                this.http.post('https://mybackend.com/api/upload/sanitize-and-save-logo', formData, { headers: headers, responseType: 'blob' })\n                .subscribe(data => {\n                  // Sanitized logo returned from backend\n                })\n                **/\n              } else {\n                // this.toastr.error(\"Maximum 6 files are allowed.\");\n              }\n            } else {\n              // this.toastr.error(\"Max size of a file allowed is 1mb, files with size more than 1mb are discarded.\");\n            }\n          });\n\n\n        } else {\n          // It was a directory (empty directories are added, otherwise only files)\n          // this.toastr.error(\"Only files in '.pdf', '.jpg', '.jpeg', '.png' format are accepted and directories are not allowed.\");\n          // const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n          // console.log(droppedFile.relativePath, fileEntry);\n        }\n      }\n    }\n  }\n\n  isFileAllowed(fileName: string) {\n    let isFileAllowed = false;\n    const allowedFiles = ['.pdf', '.jpg', '.jpeg', '.png'];\n    const regex = /(?:\\.([^.]+))?$/;\n    const extension = regex.exec(fileName);\n    if (undefined !== extension && null !== extension) {\n      for (const ext of allowedFiles) {\n        if (ext === extension[0]) {\n          isFileAllowed = true;\n        }\n      }\n    }\n    return isFileAllowed;\n  }\n\n  isFileSizeAllowed(size: number) {\n    let isFileSizeAllowed = false;\n    if (size < 1000000) {\n      isFileSizeAllowed = true;\n    }\n    return isFileSizeAllowed;\n\n  }\n\n  imageDropped($event: any) {\n    for (const item of $event) {\n      const droppedFile = item;\n      const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n      const reader = new FileReader();\n      fileEntry.file(file => {\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.img = reader.result;\n          this.images.push(this.sanitizer.bypassSecurityTrustResourceUrl(this.img));\n          // this.images.push(this.img);\n        };\n      });\n    }\n  }\n\n  add(key: any, value: any) {\n    let obj: any = [];\n    if (key && value) {\n      obj = { key, value }\n      this.specifications.push(obj);\n      this.key = \"\";\n      this.value = \"\";\n    }\n    else {\n    this.isError=true;\n      this.notifier.show({ type: 'error', message: \"Please enter both values\", template: this.customNotificationTmpl });\n    }\n  }\n  delete(arr:any,x: number) {\n    // var delBtn = confirm(\" Do you want to delete ?\");\n    // if ( delBtn == true ) {\n    arr.splice(x, 1);\n    // }   \n  }\n\n  change(name:string,$event:any){\n    console.log(name);\n    console.log($event);\n\n  }\n\n} \n","<notifier-container style=\"Color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<div class=\"modal-header\">\n  <span class=\"modal-title\">Add Product</span>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form class=\"mt-2\" [formGroup]=\"addProductForm\" (ngSubmit)=\"addProduct()\">\n    <span class=\"title\">Images <span class=\"limit\">(Add upto 4 images)</span> </span>\n    <div class=\"row\">\n      <div class=\"col-sm col-md-6\">\n        <div class=\"row\">\n          <div class=\"m-3 img_wrp\" *ngFor=\"let item of images; let i=index\">\n            <img [src]=\"item\" width=\"100\" height=\"100\" class=\"imgResponsiveMax\" alt=\"\" />\n            <!-- <img src=\"../../../../assets/images/close.svg\" height= 20 class=\"img-close\" aria-label=\"Close\" class=\"imgResponsiveMax\" (click)=\"removeImage(i)\"/> -->\n            <span class=\"img-close\" aria-label=\"Close\" aria-hidden=\"true\" (click)=\"delete(images,i)\">&times;</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm col-md-6\">\n        <div class=\"form-group\">\n          <ngx-file-drop dropZoneLabel=\"Drop files here\" (onFileDrop)=\"dropped($event)\"\n            [dropZoneClassName]=\"'upload-background-image'\">\n            <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\n              <div class=\"d-flex flex-column mt-5\">\n                <img class=\"cloud\" src=\"../../../../assets/images/cloud.svg\">\n                <span>Drag and Drop files or\n                  <span type=\"button\" (click)=\"openFileSelector()\" class=\"browse\"> Browse</span></span>\n                <button type=\"button\" class=\"btn btn-upload\">Upload</button>\n              </div>\n            </ng-template>\n          </ngx-file-drop>\n        </div>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Title\">Product Name</label>\n            <input type=\"text\" formControlName=\"Title\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Title.errors }\" ngbAutoFocus />\n            <div *ngIf=\"submitted && f.Title.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Title.errors.required\">Product Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"BrandName\">Brand Name</label>\n            <input type=\"text\" formControlName=\"BrandName\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.BrandName.errors }\" />\n            <div *ngIf=\"submitted && f.BrandName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.BrandName.errors.required\">Brand Name is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Category\">Select Category</label>\n            <!-- <input type=\"text\" formControlName=\"Category\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.Category.errors }\" /> -->\n            <select class=\"form-control form-select\" aria-label=\"Default select example\">\n              <option selected>Open this select menu</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n            <div *ngIf=\"submitted && f.Category.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Category.errors.required\">First Name is required</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <tag-input class=\"tag\" [(ngModel)]='tag' formControlName=\"Tags\" placeholder=\"+Add tag\"></tag-input>\n            <div *ngIf=\"submitted && f.Tags.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Tags.errors.required\">Tag required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Description\">Description</label>\n            <!-- <p class=\"Description\">\n              Combination of taste and health Highly nutritive source of strength of body and mind country of Origin:\n              India\n            </p> -->\n            <textarea class=\"form-control rounded-0\" formControlName=\"Description\" id=\"exampleFormControlTextarea2\" rows=\"3\"></textarea>\n\n            <div *ngIf=\"submitted && f.Description.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Description.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <!-- <label for=\"size\">Size</label> -->\n            <!-- <input type=\"text\" formControlName=\"size\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.size.errors }\" /> -->\n            <tag-input class=\"tag\" [(ngModel)]='size' formControlName=\"Size\" placeholder=\"+Add Size\"></tag-input>\n            <div *ngIf=\"submitted && f.Size.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Size.errors.required\">Size is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"sizeFor\">For</label>\n            <!-- <input type=\"text\" formControlName=\"sizeFor\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.sizeFor.errors }\" /> -->\n            <div class=\"d-flex flex-direction-row justify-content-between mr-4\">\n              <div class=\"form-check checkbox custom-control custom-radio custom-control-inline\"\n                *ngFor=\"let item of sizeFor\">\n                <input class=\"custom-control-input\" type=\"radio\" name=\"sizeFor\" [id]=\"item\" [value]=\"item\">\n                <label class=\"custom-control-label\" [for]=\"item\">\n                  {{item}}\n                </label>\n              </div>\n            </div>\n            <div class=\"d-flex mt-2\">\n              <div class=\"custom-control custom-switch\" *ngFor=\"let item of gender ;let i = index\">\n                <input type=\"checkbox\" class=\"custom-control-input\" [id]=\"item\">\n                <label class=\"custom-control-label\" [for]=\"item\">{{item}}</label>\n              </div>\n            </div>\n            <!-- <div *ngIf=\"submitted && f.sizeFor.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.sizeFor.errors.required\">First Name is required</div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"SellingPrice\">Selling Price</label>\n          <app-price-mover [defaultVal]=\"100\" [name]=\"'SellingPrice'\" [addProductForm]=\"addProductForm\"></app-price-mover>\n           \n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Color\">Color</label>\n            <input type=\"text\" formControlName=\"Color\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Color.errors }\" />\n            <div *ngIf=\"submitted && f.Color.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Color.errors.required\">Color is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"MRP\">MRP</label>\n            <app-price-mover [defaultVal]=\"100\" [name]=\"'MRP'\" [addProductForm]=\"addProductForm\"></app-price-mover>\n              \n            <div *ngIf=\"submitted && f.MRP.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.MRP.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"AvailabilityStatus\">Availability Status</label>\n            <!-- <input type=\"text\" formControlName=\"status\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n              <div class=\"custom-control custom-switch\" *ngFor=\"let item of status ;let i = index\">\n                <input type=\"checkbox\" class=\"custom-control-input\" [id]=\"item\">\n                <label class=\"custom-control-label\" [for]=\"item\">{{item}}</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <div class=\"d-flex spec-div\">\n              <label class=\"flex-grow-1\" for=\"spec\">Specification</label>\n              <label class=\"text-right add-new\" (click)=\"add(key,value)\"> +Add</label>\n            </div>\n            <div class=\"d-flex\">\n              <input type=\"text\" class=\"form-control col-sm-5\" [(ngModel)]=\"key\" placeholder=\"Key\"\n                [ngClass]=\"{ 'is-invalid': isError }\" [ngModelOptions]=\"{standalone: true}\" (keyup)=\"isError=false;\" />\n              <input type=\"text\" class=\"form-control col-sm-5 ml-2\" [(ngModel)]=\"value\" placeholder=\"value\"\n                [ngClass]=\"{ 'is-invalid':  isError  }\" [ngModelOptions]=\"{standalone: true}\" (keyup)=\"isError=false;\"/>\n            </div>\n\n            <div class=\"d-flex mx-1 mt-2\" *ngFor=\"let item of specifications;let i = index\">\n              <label class=\"font-weight-bold spec col-sm-5\"> {{ item.key }}</label>\n              <label class=\"spec col-sm-5\"> {{ item.value }}</label>\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"delete(specifications,i)\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div *ngIf=\"submitted && f.Specification.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Specification.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"shipStatus\">Shipable</label>\n            <!-- <input type=\"text\" formControlName=\"shipStatus\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.shipStatus.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n              <div class=\"custom-control custom-switch\" *ngFor=\"let item of shippableProductStatus ;let i = index\">\n                <input type=\"checkbox\" class=\"custom-control-input\" [id]=\"item\">\n                <label class=\"custom-control-label\" [for]=\"item\">{{item}}</label>\n              </div>\n            </div>\n\n            <div *ngIf=\"submitted && f.shipStatus.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.shipStatus.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Delivery\">Delivery Options</label>\n            <!-- <input type=\"text\" formControlName=\"Delivery\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Delivery.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n              <div class=\"custom-control custom-switch\" *ngFor=\"let item of deliveryOption ;let i = index\">\n                <input type=\"checkbox\" class=\"custom-control-input\" [id]=\"item.name\" \n                formControlName=\"Delivery\" (change)=\"change(item.name,$event)\">\n                <label class=\"custom-control-label\" [for]=\"item.name\">{{item.name}}</label>\n              </div>\n            </div>\n            <div *ngIf=\"submitted && f.Delivery.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Delivery.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"ShippingCost\">Shiping Charges</label>\n            <app-price-mover [defaultVal]=\"100\" [name]=\"'ShippingCost'\" [addProductForm]=\"addProductForm\"></app-price-mover>\n            <div *ngIf=\"submitted && f.ShippingCost.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.ShippingCost.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"modal-footer form-group\">\n      <button (click)=\"activeModal.dismiss('Cross click')\" class=\"btn cancel\">\n\n        Cancel\n      </button>\n      <button [disabled]=\"loading\" class=\"btn reg\">\n        <span *ngIf=\"loading\" class=\" spinner-border spinner-border-sm mr-1\" ></span>\n        Add\n      </button>\n\n    </div>\n\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"background-color: #c0c4bd;\">\nFooter\n</div>\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from \"@angular/forms\";\n@Component({\n  selector: 'app-price-mover',\n  templateUrl: './price-mover.component.html',\n  styleUrls: ['./price-mover.component.scss']\n})\nexport class PriceMoverComponent implements OnInit ,AfterViewInit {\n@Input() name!:string;\n@Input() addProductForm!: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n//  console.log(this.addProductForm);\n//  console.log(this.name);\n    \n  }\n\n  ngAfterViewInit=()=>{\n    console.log(this.addProductForm);\n  }\n\n  get f() { return this.addProductForm.controls; }\n\n  increament(control1: string, value: number) {\n    this.addProductForm.patchValue({\n      [control1]: +this.f[control1].value + value\n    });\n  }\n\n  decreament(control1: string, value: number) {\n    this.addProductForm.patchValue({\n      [control1]: +this.f[control1].value - value\n    });\n  }\n}\n","<div class=\"d-flex mr-3\" [formGroup]=\"addProductForm\">\n    <img src=\"../../../../assets/images/minus.svg\" class=\"inc-dec pointer\" (click)=\"decreament(name,10)\"  />\n    <input type=\"text\" class=\"form-control text-center\" formControlName=\"{{name}}\"  [ngClass]=\"{ 'is-invalid': f[name].errors }\"\n     pattern=\"^[0-9]*$\" type=\"text\" maxlength=\"10\" placeholder=\"1111111111\"\n      onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n        (event.charCode >= 48 && event.charCode <= 57))\" autocomplete=\"off\" />\n    <img src=\"../../../../assets/images/plus.svg\" class=\"float-right inc-dec pointer\" (click)=\"increament(name,10)\"/>\n  </div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpService } from \"./http.service\";\nimport { map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  baseUrl = environment.baseUrl;\n  authUrl = environment.authUrl;\n  sellername = new BehaviorSubject<any>(\"User\");\n  constructor(private httpService: HttpService, private router: Router) {}\n\n  isLoggedIn = () => {\n    let user = JSON.parse(localStorage.getItem(\"USER\") || \"{}\");\n    this.sellername.next(user.storeName);\n    return !!localStorage.getItem(\"USER\");\n  };\n  logout = () => {\n    localStorage.removeItem(\"USER\");\n    localStorage.removeItem(\"AUTH_TOKEN\");\n    this.router.navigate([\"/\"]);\n  };\n  getState = () => {\n    let states = [\n      \"Andhra Pradesh\",\n      \"Arunachal Pradesh\",\n      \"Assam\",\n      \"Bihar\",\n      \"Chhattisgarh\",\n      \"Goa\",\n      \"Gujarat\",\n      \"Haryana\",\n      \"Himachal Pradesh\",\n      \"Jammu and Kashmir\",\n      \"Jharkhand\",\n      \"Karnataka\",\n      \"Kerala\",\n      \"Madhya Pradesh\",\n      \"Maharashtra\",\n      \"Manipur\",\n      \"Meghalaya\",\n    ];\n    return states;\n  };\n  getCity = () => {\n    let country = [\n      \"Afghanistan\",\n      \"Albania\",\n      \"Algeria\",\n      \"Andorra\",\n      \"Angola\",\n      \"Anguilla\",\n      \"India\",\n    ];\n    return country;\n  };\n\n  getToken = (param: any) => {\n    // return this._httpClient.post(environment.baseUrl + 'token', param);\n    return this.httpService\n      .post(environment.baseUrl + \"token\", param)\n      .pipe(map((data) => data));\n  };\n\n  generateOTP = (param: any) => {\n    return this.httpService\n      .post(environment.authUrl + \"account/GenerateOTP\", param)\n      .pipe(map((data) => data));\n  };\n  authorizeToken = (param: any) => {\n    const body = new HttpParams()\n      .set(\"username\", param.UserName)\n      .set(\"grant_type\", \"password\")\n      .set(\"password\", param.password);\n\n    return this.httpService\n      .post(environment.baseUrl + \"token\", body.toString(), this.getHeader())\n      .pipe(map((data) => data));\n  };\n\n  refreshToken = () => {\n    let user = JSON.parse(localStorage.getItem(\"USER\") || \"{}\");\n    const body = new HttpParams()\n      .set(\"grant_type\", \"refresh_token\")\n      .set(\"refresh_token\", user.refresh_token);\n    return this.httpService.post(\n      environment.baseUrl + \"token\",\n      body.toString(),\n      this.getHeader()\n    );\n  };\n  registerSeller = (param: any) => {\n    return this.httpService.post(\n      environment.baseUrl + \"account/register\",\n      param,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  private getAuthHeader = () => {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n    });\n    return headers;\n  };\n\n  getHeader = () => {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    });\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router  } from \"@angular/router\";\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  constructor(private _router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  gotoMyOrder=(route:string)=>{\n    this._router.navigateByUrl(route);\n  }\n}\n","<section class=\"d-flex justify-content-center mt-5\">\n    <div>\n        <label class=\"pointer\" (click)=\"gotoMyOrder('my-orders')\"> My Orders / </label>\n        <label class=\"font-weight-bold ml-2\"> Order-details</label>\n\n    </div>\n</section>\n\n<section class=\"card mt-3 shadow\" style=\"width: 70%;margin: 0 auto;\">\n    <div class=\"card-header d-flex\">\n        <div class=\"col-md-8 col-sm font-weight-bold\">Bill Details</div>\n        <div class=\"col-md-4 col-sm font-weight-bold\">Order Details</div>\n    </div>\n    <div class=\"card-body\">\n        <section class=\"d-flex row mb-2\">\n            <div class=\"col-md-8\">\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Customer Name</label>\n                    <label class=\"col-md-3 col-sm\">Rajesh Mishara</label>\n                </div>\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Delivery Address</label>\n                    <label class=\"col-md-6 col-sm\">Flat no 106\n                        Darshan Society, Dhanori, Pune Maharashtra\n                    </label>\n                </div>\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Phone</label>\n                    <label class=\"col-md-3 col-sm\">9999222384</label>\n                </div>\n\n\n            </div>\n            <div class=\"col-md-4\">\n                <div> <label class=\"col-md-6 col-sm-6 lbl\">Order Date</label>\n                    <label class=\"col-md-6 col-sm-6\">24 July 20</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Order ID</label>\n                    <label class=\"col-md-6 col-sm-6\">ORDER123456</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Delivery Type</label>\n                    <label class=\"col-md-6 col-sm-6\">Home Delivery</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Delivery By</label>\n                    <label class=\"col-md-6 col-sm-6\">Royal Grocery Mart</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Payment</label>\n                    <label class=\"col-md-6 col-sm-6\">Online</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Order Amount</label>\n                    <label class=\"col-md-6 col-sm-6\"> ₹ 360</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Status</label>\n                    <label class=\"col-md-6 col-sm-6\" style=\"color: #E09541;\">Recieved</label>\n                </div>\n            </div>\n        </section>\n\n        <label style=\"font-size: 15px;\">Order Summary</label>\n        <hr>\n        <section>\n            <div class=\"row d-flex align-items-baseline\">\n                <div class=\"col-md-3 col-sm\"> <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\"\n                        alt=\"Card image cap\" height=60 width=40></div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\"></label>\n                    <label class=\"d-flex lbl\">Dawat Rozana Rice</label></div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\">Qty</label>\n                    <label class=\"d-flex\">1</label>\n                </div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\">Total</label>\n                    <label class=\"d-flex\"> ₹ 100</label>\n                </div>\n\n            </div>\n        </section>\n    </div>\n\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContactComponent } from './component/contact/contact.component';\nimport { OrderDetailComponent } from './modules/my-orders/order-detail/order-detail.component';\nimport { AuthGuard } from \"./guard/auth.guard\";\nconst routes: Routes = [\n  { path: 'login',  loadChildren: () => import('./modules/login/login.module').then(m => m.LoginModule) },\n  { path: 'coupen', canActivate:[AuthGuard], loadChildren: () => import('./modules/coupen/coupen.module').then(m => m.CoupenModule) },\n  { path: 'home', canActivate:[AuthGuard],  loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule) },\n  { path: 'contact', component: ContactComponent },\n  { path: 'my-orders',canActivate:[AuthGuard],  loadChildren: () => import('./modules/my-orders/my-orders.module').then(m => m.MyOrdersModule) },\n  { path: 'order-detail', canActivate:[AuthGuard], component: OrderDetailComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  // { path: '**', component: lo },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{scrollPositionRestoration:'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<section class=\"d-flex justify-content-center mt-5\">\n    <ul *ngFor=\"let item of orderType\">\n        <li [ngClass]=\"{active: item===activeOrderList}\" (click)=\"activeOrderList=item\"> <a>{{item}}</a></li>\n    </ul>\n</section>\n\n\n<!--Accordion wrapper-->\n<div class=\"container accordion md-accordion\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\"\n    style=\"width: 80%;\">\n    <div class=\"card mb-3 shadow-sm\" *ngFor=\"let item of itemsList let i=index\">\n        <!-- Card header -->\n        <div class=\"card-header\" role=\"tab\" id=\"{{i}}\">\n            <a data-toggle=\"collapse\" data-parent=\"#accordionEx\" href=\"#random{{i}}\" aria-expanded=\"false\"\n                aria-controls=\"collapseOne1\">\n                <h5 class=\"mb-0\" (click)=\"active=i\" class=\"d-flex justify-content-between\">\n                    <section class=\"container\">\n                        <section class=\"px-1\">\n                            <section class=\"\">\n                                <section class=\"row\">\n                                    <div class=\"col-sm col-md\">\n                                        <article>Date</article>\n                                        <span>\n                                            24 July 20\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>OrderID</article>\n                                        <span>\n                                            ORD12346789\n                                        </span>\n                                    </div>\n\n\n\n                                    <div class=\"col-sm-2 col-md\">\n                                        <article>Mode of Payment</article>\n                                        <span>\n                                            online\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm-1 col-md\">\n                                        <article>Total</article>\n                                        <span>\n                                            ₹ 360\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>Delivery Type</article>\n                                        <span>\n                                            Home\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>Status</article>\n                                        <span style=\"color: #f89838 !important;\">Recieved</span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <button class=\"btn btn-lg btn-block edit\" (click)=\"viewOrderDetails($event);false\">Order Details</button>\n                                    </div>\n                                </section>\n                            </section>\n                        </section>\n\n                    </section>\n                    <img src=\"../../../assets/images/arrow.svg\" class=\"align\" [ngClass]=\"{rotate: i===active}\">\n                </h5>\n            </a>\n        </div>\n\n        <!-- Card body -->\n        <div id=\"random{{i}}\" class=\"collapse\" [ngClass]=\"{show:i===0}\" role=\"tabpanel\" aria-labelledby=\"{{i}}\"\n            data-parent=\"#accordionEx\">\n            <div class=\"card-body row d-flex justify-content-around\">\n                <div class=\" row flex-1\">\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-3 col-md\">\n                    <article>Action</article>\n                    <select class=\"form-control form-select\" aria-label=\"Default select example\">\n                        <option selected>Open this select menu</option>\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <!-- Accordion card -->\n\n\n\n</div>\n<!-- Accordion wrapper -->","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router'\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.scss']\n})\nexport class MyOrdersComponent implements OnInit {\n  _showBtn: boolean=true;\n  screenHeight!: number;\n  screenWidth!: number;\n  constructor(private _router:Router) { }\n  _opened: boolean = true;\n \norderType=['New Orders','Completed Orders']\nactiveOrderList:string='New Orders';\nactive=0;\n  \nitemsList= [\n  {\n    title: 'Collapsible Group Item #1',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  },\n  {\n    title: 'Collapsible Group Item #2',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  },\n  {\n    title: 'Collapsible Group Item #3',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  }\n];\n\n  ngOnInit(): void {\n   \n  }\n\n  viewOrderDetails=(event:Event)=>{\n    this._router.navigate(['order-detail']);\n   event.stopPropagation();\n   \n  }\n\n\n \n  \n}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddProductComponent } from \"../../../model/add-product/add-product.component\";\nimport { HostListerService } from \"../../../helper/host-lister.service\";\nimport { AppService } from \"../../../services/app.service\";\n\n@Component({\n  selector: \"app-page-setup\",\n  templateUrl: \"./page-setup.component.html\",\n  styleUrls: [\"./page-setup.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageSetupComponent implements OnInit {\n  editShopName: boolean = false;\n  screenHeight!: number;\n  screenWidth!: number;\n  _showBtn: boolean = true;\n  @Output() opened = new EventEmitter<string>();\n\n  pageObject = {\n    phoneNumber: { errorMessage: \"\" },\n    uniqueId: { errorMessage: \"\" },\n  };\n\n  constructor(\n    public modalService: NgbModal,\n    public service: AppService,\n    private _hostListerService: HostListerService\n  ) {}\n\n  ngOnInit(): void {\n    this.getScreenSize();\n  }\n  onPhoneChange() {\n    this.opened.emit();\n  }\n\n  shopName(value: any) {\n    console.log(value);\n  }\n  /**\n   * Set Contact Number\n   */\n  contactNumber(number: any) {\n    let regex = /^[6-9]\\d{9}$/;\n    this.pageObject.phoneNumber.errorMessage = !regex.test(number)\n      ? \"Invalid Phone Number\"\n      : \"\";\n  }\n  /**\n   * Check Unique Cde\n   */\n  uniqueId(id: any) {\n    console.log(id);\n    this.pageObject.uniqueId.errorMessage = \"invalid ID\";\n    // this.service.validateUniqueId({ Id: id }).subscribe((res) => {\n    //   console.log(res);\n    // });\n  }\n\n  getScreenSize() {\n    this.screenHeight = this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n\n    if (this.screenWidth < 576) {\n      this._showBtn = true;\n    } else {\n      this._showBtn = false;\n    }\n  }\n\n  addProduct = () => {\n    this.modalService.open(AddProductComponent, {\n      size: \"lg\",\n      windowClass: \"custom-class\",\n    });\n  };\n}\n","<button\n  type=\"button\"\n  class=\"close\"\n  aria-label=\"Close\"\n  (click)=\"onPhoneChange()\"\n  *ngIf=\"_showBtn\"\n>\n  <span aria-hidden=\"true\">&times;</span>\n</button>\n<p class=\"text-left font-weight-bold\">Setup your page</p>\n\n<app-float-text\n  label=\"Your Shop Name\"\n  value=\"Royal Supermarket\"\n  type=\"textArea\"\n  errorMsg=\"\"\n  (onChange)=\"shopName($event)\"\n></app-float-text>\n\n<div class=\"border rounded-1 mt-2\">\n  <p class=\"mb-0\">\n    <small>Your Address</small>\n    <span class=\"float-right\"><small>Update</small></span>\n  </p>\n  <p class=\"name text-left mb-0\">Flat No 101, first Floor</p>\n  <p class=\"name text-left mb-0\">Lane no 3, Kalyani Nagar</p>\n  <p class=\"name text-left mb-0\">Pune Maharashtra</p>\n  <p class=\"name text-left mb-0\">411015</p>\n</div>\n\n<app-float-text\n  label=\"Contact Number\"\n  value=\"9992212345\"\n  type=\"number\"\n  [errorMsg]=\"pageObject.phoneNumber.errorMessage\"\n  (onChange)=\"contactNumber($event)\"\n></app-float-text>\n\n<app-float-text\n  label=\"Unique ID\"\n  value=\"RoyalSupermarket.com\"\n  type=\"text\"\n  [errorMsg]=\"pageObject.uniqueId.errorMessage\"\n  (onChange)=\"uniqueId($event)\"\n></app-float-text>\n\n<div class=\"mt-2 mt-2 border-bottom\">\n  <p class=\"mb-0\">\n    <small>Unique Link</small>\n  </p>\n  <a href=\"\" tabindex=\"-1\">RoyalSupermarket.com</a>\n</div>\n<div class=\"form-group mt-2\">\n  <ngx-file-drop dropZoneLabel=\"Drop files here\">\n    <ng-template\n      ngx-file-drop-content-tmp\n      let-openFileSelector=\"openFileSelector\"\n    >\n      <div class=\"d-flex\">\n        <img\n          src=\"../../../../assets/images/add.svg\"\n          alt=\"add Product\"\n          style=\"height: 20px;\"\n        />\n        <span\n          class=\"ml-3\"\n          type=\"button\"\n          (click)=\"openFileSelector()\"\n          style=\"color: #6ebe44;\"\n        >\n          Add Product</span\n        >\n      </div>\n    </ng-template>\n  </ngx-file-drop>\n</div>\n<div class=\"row\">\n  <div class=\"col text-center\">\n    <button class=\"btn create btn-block\" (click)=\"addProduct()\">Create</button>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}