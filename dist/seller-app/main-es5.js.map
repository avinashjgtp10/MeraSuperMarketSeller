{"version":3,"sources":["webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/directive/sucess-btn.directive.ts","webpack:///src/app/modules/home/home.component.ts","webpack:///src/app/modules/home/home.component.html","webpack:///src/app/modules/coupen/coupen-list/country.service.ts","webpack:///src/app/modules/coupen/coupen.component.html","webpack:///src/app/modules/coupen/coupen.component.ts","webpack:///src/app/component/shared/create-coupen/create-coupen.component.ts","webpack:///src/app/component/shared/create-coupen/create-coupen.component.html","webpack:///src/app/model/register/register.component.ts","webpack:///src/app/model/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/modules/coupen/coupen-list/countries.ts","webpack:///src/app/component/readonly-input/readonly-input.component.ts","webpack:///src/app/component/readonly-input/readonly-input.component.html","webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/card/card.component.ts","webpack:///src/app/component/buttons/buttons.component.ts","webpack:///src/app/component/buttons/buttons.component.html","webpack:///src/app/component/float-text/float-text.component.ts","webpack:///src/app/component/float-text/float-text.component.html","webpack:///src/app/helper/host-lister.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/component/contact/contact.component.ts","webpack:///src/app/component/contact/contact.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/coupen/coupen-list/sortable.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modules/login/login.component.ts","webpack:///src/app/modules/login/login.component.html","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/modules/coupen/coupen-list/coupen-list.component.ts","webpack:///src/app/modules/coupen/coupen-list/coupen-list.component.html","webpack:///src/app/model/add-product/add-product.component.ts","webpack:///src/app/model/add-product/add-product.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/shared/price-mover/price-mover.component.ts","webpack:///src/app/shared/price-mover/price-mover.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/modules/my-orders/order-detail/order-detail.component.ts","webpack:///src/app/modules/my-orders/order-detail/order-detail.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/modules/my-orders/my-orders.component.html","webpack:///src/app/modules/my-orders/my-orders.component.ts","webpack:///src/app/component/shared/page-setup/page-setup.component.ts","webpack:///src/app/component/shared/page-setup/page-setup.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HeaderComponent","_authService","logout","sellername","subscribe","res","sellerName","AppBtnDirective","elementRef","renderer","changecolor","appBtnStaus","color","setStyle","nativeElement","HomeComponent","_modalService","_hostListerService","_appService","_activatedRoute","notifier","_opened","_showBtn","sellerDetails","addProduct","open","size","windowClass","getAllProduct","data","ReturnValue","productList","ReturnType","getScreenSize","getSellerDetails","screenHeight","screenWidth","event","file","fileList","currentTarget","files","name","formData","FormData","append","uploadBannerImage","response","notify","uploadProfileImage","uploadBanner","compare","v1","v2","sort","countries","column","direction","a","b","matches","country","term","pipe","CoupenName","toLowerCase","includes","promoDesc","CoupenCode","CountryService","_loading$","_search$","_countries$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","next","_search","result","total","asObservable","_set","patch","Object","assign","filter","length","slice","CoupenComponent","CreateCoupenComponent","_formBuilder","usageType","submitted","addCoupen","coupenForm","group","required","promoType","desc","amountOff","limit","userID","validFrom","toDate","coupenCode","controls","RegisterComponent","activeModal","formBuilder","_router","loading","state","otp","error","initialiseForm","registerForm","UserName","MobileNumber","ShopName","State","Email","pattern","City","Pin","AddressLine1","AddressLine2","AddressLine3","Landmark","Country","setFormValues","patchValue","setStepper","stepper","document","querySelector","linear","animation","register","invalid","registerSeller","value","localStorage","setItem","JSON","stringify","show","message","ReturnMessage","type","template","customNotificationTmpl","navigate","error_description","sendOtp","txtEmail","txtPhone","re","emailIsValid","test","isOtpSend","param","generateOTP","err","retrycount","console","log","messageType","to","onOtpChange","authorizeToken","grant_type","password","access_token","userName","getState","getCity","lastClick","environment","production","baseUrl","authUrl","COUNTRIES","NumberToRedeem","upperLimit","validTill","ReadonlyInputComponent","valueChange","inputChange","emit","CardComponent","ButtonsComponent","label","btnType","isLoading","isDisabled","onClick","FloatTextComponent","isEdit","errorMsg","onChange","HostListerService","counter","window","innerHeight","innerWidth","HttpService","httpClient","AUTH_TOKEN","url","params","headers","get","errorHandler","bind","post","keys","key","status","Array","messages","Authorization","getItem","AppService","_httpService","getAllProducts","getAuthHeader","validateUniqueId","id","payload","ContactComponent","AppComponent","router","title","showHead","events","forEach","rotate","NgbdSortableHeader","sortable","customNotifierOptions","position","horizontal","distance","vertical","gap","AppModule","forRoot","withConfig","LoginComponent","modalService","config","_hs","counterValue","responseMessage","isEmailMode","isOtpValid","countSubscribe","unsubscribe","storeName","backdrop","keyboard","AuthGuard","_au","isLoggedIn","CoupenListComponent","service","countries$","total$","header","onSort","AddProductComponent","sanitizer","images","specifications","isError","tag","sizeFor","gender","shippableProductStatus","deliveryOption","prodDetails","addProductForm","Title","ProductId","SellingPrice","MRP","Tags","toString","Description","Delivery","ShippingCost","Size","Color","BrandName","Category","Specification","GST","MaxItemInOneShipment","AvailabilityStatus","Target","TaxablePrice","shipStatus","imageDropped","droppedFile","fileEntry","isFile","isFileAllowed","isFileSizeAllowed","push","relativePath","fileName","allowedFiles","regex","extension","exec","undefined","ext","$event","item","reader","FileReader","readAsDataURL","onload","img","bypassSecurityTrustResourceUrl","obj","arr","x","splice","dropped","add","FooterComponent","PriceMoverComponent","ngAfterViewInit","control1","f","decreament","increament","AuthService","httpService","user","parse","removeItem","states","getToken","body","set","getHeader","refreshToken","refresh_token","OrderDetailComponent","gotoMyOrder","route","navigateByUrl","routes","path","loadChildren","then","m","LoginModule","canActivate","CoupenModule","HomeModule","component","MyOrdersModule","redirectTo","pathMatch","AppRoutingModule","scrollPositionRestoration","MyOrdersComponent","orderType","activeOrderList","active","itemsList","description","viewOrderDetails","stopPropagation","PageSetupComponent","editShopName","isAddressReadonly","sellerLinkId","address","opened","pageObject","phoneNumber","errorMessage","uniqueId","shopName","addressLine1","city","saveUser","userInfo","number","Phone","Id","msg","UniqueId","contactNumber","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["<!-- Navigation -->\n<nav class=\"navbar navbar-default navbar-expand-lg static-top sticky-top shadow mb-1 bg-white rounded pt-0\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"../../../assets/images/logo.svg\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive1\"\n      aria-controls=\"navbarResponsive1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive1\">\n      <ul class=\"navbar-nav ml-auto align-items-center\">\n        <li class=\"nav-item \"><a class=\"nav-link\" routerLink=\"/home\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Home</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/my-orders\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">My Orders</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/coupen\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Coupen</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/contact\" [routerLinkActive]=\"['active']\"\n            [routerLinkActiveOptions]=\"{exact:true}\">Contact</a></li>\n        <li class=\"dropdown\"><img src=\"../../../assets/images/person.svg\">\n          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n            aria-expanded=\"false\">{{sellerName}} <span class=\"caret\"></span></a>\n          <ul class=\"dropdown-menu\">\n            <li class=\"dropdown-item\" *ngIf=\"sellerName=='User'\"><a class=\"nav-link\" routerLink=\"/login\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact:true}\">login</a></li>\n            <li class=\"dropdown-item\" *ngIf=\"sellerName!=='User'\" (click)=\"logout()\"><a href=\"#\">Logout</a></li>\n          </ul>\n        </li>\n        <li class=\"nav-item\"> \n          <a class=\"nav-link\" href=\"#\"> <img src=\"../../../assets/images/bell.svg\"></a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  sellerName!: string;\n\n  constructor(private _authService:AuthService) { \n    this._authService.sellername.subscribe(res=>{\n      this.sellerName=res;\n    })\n  }\n\n  ngOnInit(): void {\n   \n  }\n  logout=()=>{\n    this._authService.logout();\n  }\n\n}\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appBtn]'\n})\nexport class AppBtnDirective implements OnInit {\n  @Input() appBtnStaus!: string\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    \n  }\n\n  ngOnInit() {\n    // console.log(this.appBtnStaus);\n    this.changecolor(this.appBtnStaus);\n  }\n\n  changecolor(color: string) {\n    if (color === \"success\") {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', '#6fba47');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'color', 'white');\n    } else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', 'white');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'color', 'black');\n    }\n  }\n}\n\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  HostListener,\n} from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddProductComponent } from \"../../model/add-product/add-product.component\";\nimport { HostListerService } from \"../../helper/host-lister.service\";\nimport { AppService } from \"../../services/app.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NotifierService } from \"angular-notifier\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  screenHeight!: number;\n  screenWidth!: number;\n  productList: any;\n\n  constructor(\n    public _modalService: NgbModal,\n    private _hostListerService: HostListerService,\n    private _appService: AppService,\n    private _activatedRoute: ActivatedRoute,\n    private notifier: NotifierService\n  ) {}\n\n  ngOnInit(): void {\n    this.getScreenSize();\n    this.getAllProduct();\n    this.getSellerDetails();\n  }\n\n  _opened: boolean = true;\n  _showBtn: boolean = false;\n  sellerDetails: any = [];\n\n  _toggleSidebar() {\n    this._opened = !this._opened;\n  }\n\n  getScreenSize() {\n    this.screenHeight = this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n    if (this.screenWidth < 576) {\n      this._opened = false;\n      this._showBtn = true;\n    } else {\n      this._opened = true;\n      this._showBtn = false;\n    }\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"]) onResize(event: any) {\n    this.getScreenSize();\n  }\n\n  addProduct = () => {\n    this._modalService.open(AddProductComponent, {\n      size: \"lg\",\n      windowClass: \"custom-class\",\n    });\n  };\n\n  getAllProduct = () => {\n    this._activatedRoute.data.subscribe((res) => {\n      res.data.ReturnValue ? (this.productList = res.data.ReturnType) : \"\";\n    });\n  };\n\n  /**\n   * Upload Banner Image\n   */\n  uploadBanner(file: any) {\n    let fileList = file.currentTarget.files[0];\n    let name = fileList.name;\n    const formData = new FormData();\n    formData.append(\"fileName\", name);\n    formData.append(\"File1\", fileList);\n    this._appService.uploadBannerImage(formData).subscribe((response: any) => {\n      this.notifier.notify(\"success\", response);\n    });\n  }\n\n  /**\n   * Upload Profile Image\n   */\n  uploadProfileImage(file: any) {\n    let fileList = file.currentTarget.files[0];\n    let name = fileList.name;\n    const formData = new FormData();\n    formData.append(\"fileName\", name);\n    formData.append(\"File1\", fileList);\n    this._appService.uploadProfileImage(formData).subscribe((response: any) => {\n      this.notifier.notify(\"success\", response);\n    });\n  }\n\n  /**\n   * Get Seller details\n   */\n  getSellerDetails() {\n    this._appService.getSellerDetails().subscribe((res) => {\n      this.sellerDetails = res[\"ReturnType\"][0];\n    });\n  }\n}\n","<notifier-container></notifier-container>\n<ng-sidebar-container style=\"height: 100vh;\">\n  <!-- A sidebar -->\n  <ng-sidebar\n    class=\"sidebar\"\n    [(opened)]=\"_opened\"\n    [mode]=\"'push'\"\n    *ngIf=\"sellerDetails.StoreId\"\n  >\n    <app-page-setup\n      (opened)=\"_toggleSidebar()\"\n      class=\"shadow\"\n      [userInfo]=\"sellerDetails\"\n    ></app-page-setup>\n  </ng-sidebar>\n\n  <!-- Page content -->\n  <div ng-sidebar-content [animate]=\"false\">\n    <button\n      class=\"border btn-dark\"\n      type=\"button\"\n      (click)=\"_toggleSidebar()\"\n      *ngIf=\"_showBtn\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"container mt-2\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-10 banner-container\">\n          <img\n            class=\"banner-img\"\n            src=\"../../../assets/images/seller-bg.svg\"\n            alt=\"Card image\"\n          />\n          <div class=\"camera-icon\">\n            <label for=\"file-input\">\n              <img src=\"../../../assets/images/camera-icon.svg\" class=\"\" />\n            </label>\n            <input\n              id=\"file-input\"\n              type=\"file\"\n              accept=\"image/*\"\n              (change)=\"uploadBanner($event)\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col d-flex\">\n          <div class=\"dummy-img shadow\">\n            <img\n              class=\"\"\n              src=\"../../../assets/images/seller-photo.svg\"\n              alt=\"Card image\"\n            />\n            <div class=\"camera-icon\">\n              <label for=\"file-input\">\n                <img src=\"../../../assets/images/camera-icon.svg\" class=\"\" />\n              </label>\n              <input\n                id=\"file-input\"\n                type=\"file\"\n                accept=\"image/*\"\n                (change)=\"uploadProfileImage($event)\"\n              />\n            </div>\n          </div>\n          <div class=\"seller-details\">\n            <label class=\"sellerName mb-0\">{{sellerDetails.ShopName}}</label>\n            <p class=\"name text-left mb-0\">\n              <small>{{sellerDetails.AddressLine1}}</small>\n            </p>\n            <p class=\"name text-left mb-2 sellerName\">\n              <small>{{sellerDetails.Phone}}</small>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"d-flex justify-content-end mr-3\">\n          <img\n            src=\"../../../../assets/images/add.svg\"\n            alt=\"add Product\"\n            style=\"height: 20px;\"\n          />\n          <span\n            class=\"ml-3\"\n            type=\"button\"\n            style=\"color: #6ebe44;\"\n            (click)=\"addProduct()\"\n          >\n            Add Product</span\n          >\n        </div>\n        <ng-container>\n          <app-card [productList]=\"productList\"></app-card>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-sidebar-container>\n","import {Injectable, PipeTransform} from '@angular/core';\n\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\n\nimport {Country} from './country';\nimport {COUNTRIES} from './countries';\nimport {DecimalPipe} from '@angular/common';\nimport {debounceTime, delay, switchMap, tap} from 'rxjs/operators';\nimport {SortColumn, SortDirection} from './sortable.directive';\n\ninterface SearchResult {\n  countries: Country[];\n  total: number;\n}\n\ninterface State {\n  page: number;\n  pageSize: number;\n  searchTerm: string;\n  sortColumn: SortColumn;\n  sortDirection: SortDirection;\n}\n\nconst compare = (v1: string | number, v2: string | number) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n\nfunction sort(countries: Country[], column: SortColumn, direction: string): Country[] {\n  if (direction === '' || column === '') {\n    return countries;\n  } else {\n    return [...countries].sort((a, b) => {\n      const res = compare(a[column], b[column]);\n      return direction === 'asc' ? res : -res;\n    });\n  }\n}\n\nfunction matches(country: Country, term: string, pipe: PipeTransform) {\n  return country.CoupenName.toLowerCase().includes(term.toLowerCase())\n||  country.promoDesc.toLowerCase().includes(term.toLowerCase())\n||  country.CoupenCode.toLowerCase().includes(term.toLowerCase())\n\n    // || pipe.transform(country.promoDesc.toLowerCase()).includes(term.toLowerCase())\n    // || pipe.transform(country.CoupenCode.toLowerCase()).includes(term.toLowerCase());\n}\n\n@Injectable({providedIn: 'root'})\nexport class CountryService {\n  private _loading$ = new BehaviorSubject<boolean>(true);\n  private _search$ = new Subject<void>();\n  private _countries$ = new BehaviorSubject<Country[]>([]);\n  private _total$ = new BehaviorSubject<number>(0);\n\n  private _state: State = {\n    page: 1,\n    pageSize: 5,\n    searchTerm: '',\n    sortColumn: '',\n    sortDirection: ''\n  };\n\n  constructor(private pipe: DecimalPipe) {\n    this._search$.pipe(\n      tap(() => this._loading$.next(true)),\n      debounceTime(200),\n      switchMap(() => this._search()),\n      delay(200),\n      tap(() => this._loading$.next(false))\n    ).subscribe(result => {\n      this._countries$.next(result.countries);\n      this._total$.next(result.total);\n    });\n\n    this._search$.next();\n  }\n\n  get countries$() { return this._countries$.asObservable(); }\n  get total$() { return this._total$.asObservable(); }\n  get loading$() { return this._loading$.asObservable(); }\n  get page() { return this._state.page; }\n  get pageSize() { return this._state.pageSize; }\n  get searchTerm() { return this._state.searchTerm; }\n\n  set page(page: number) { this._set({page}); }\n  set pageSize(pageSize: number) { this._set({pageSize}); }\n  set searchTerm(searchTerm: string) { this._set({searchTerm}); }\n  set sortColumn(sortColumn: SortColumn) { this._set({sortColumn}); }\n  set sortDirection(sortDirection: SortDirection) { this._set({sortDirection}); }\n\n  private _set(patch: Partial<State>) {\n    Object.assign(this._state, patch);\n    this._search$.next();\n  }\n\n  private _search(): Observable<SearchResult> {\n    const {sortColumn, sortDirection, pageSize, page, searchTerm} = this._state;\n\n    // 1. sort\n    let countries = sort(COUNTRIES, sortColumn, sortDirection);\n\n    // 2. filter\n    countries = countries.filter(country => matches(country, searchTerm, this.pipe));\n    const total = countries.length;\n\n    // 3. paginate\n    countries = countries.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n    return of({countries, total});\n  }\n}\n","<ng-sidebar-container style=\"height: 100vh;\">\n    <!-- A sidebar -->\n    <ng-sidebar class=\"sidebar\" [(opened)]=\"_opened\" [mode]=\"'push'\">\n    <app-create-coupen></app-create-coupen>\n    </ng-sidebar>\n  \n    <!-- Page content -->\n    <div ng-sidebar-content [animate]=\"false\">\n      <button class=\"border btn-dark\" type=\"button\" (click)=\"_toggleSidebar()\" *ngIf=\"_showBtn\">\n        <span class=\"navbar-toggler-icon\"></span></button>\n    <app-coupen-list></app-coupen-list>\n    </div>\n  \n  </ng-sidebar-container>","import { Component, HostListener, OnInit } from '@angular/core';\nimport { HostListerService } from \"./../../helper/host-lister.service\";\n@Component({\n  selector: 'app-coupen',\n  templateUrl: './coupen.component.html',\n  styleUrls: ['./coupen.component.scss']\n})\nexport class CoupenComponent implements OnInit {\n  _opened: boolean = true;\n _showBtn: boolean=false;\n screenHeight!: number;\n screenWidth!: number;\n  constructor(private _hostListerService:HostListerService) { }\n\n  ngOnInit(): void {\n    this.getScreenSize();\n  }\n  _toggleSidebar() {\n    this._opened = !this._opened;\n  }\n\n  getScreenSize() {\n    this.screenHeight =  this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n    if (this.screenWidth < 576) {\n      this._opened = false;\n      this._showBtn = true;\n    } else {\n      this._opened = true;\n      this._showBtn = false;\n    }\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(event:any) {\n    this.getScreenSize()\n }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-coupen',\n  templateUrl: './create-coupen.component.html',\n  styleUrls: ['./create-coupen.component.scss']\n})\nexport class CreateCoupenComponent implements OnInit {\n  usageType=['Single','Multiple'];\n  coupenForm!:FormGroup;\n  submitted=false;\n  constructor(\n    private _formBuilder:FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.coupenForm=this._formBuilder.group({\n      name:[\"\",Validators.required],\n      promoType:[\"\",Validators.required],\n      desc:[\"\",Validators.required],\n      amountOff:[\"\",Validators.required],\n      limit:[\"\",Validators.required],\n      userID:[\"\",Validators.required],\n      validFrom:[\"\",Validators.required],\n      toDate:[\"\",Validators.required],\n      usageType:[\"\",Validators.required],\n      coupenCode:[\"\",Validators.required],\n    })\n  }\n  get f(){return this.coupenForm.controls;}\n \n  addCoupen=()=>{\n    \n  }\n\n}\n","<p class=\"text-left font-weight-bold\">Create Coupen</p>\n\n<div class=\"coupen-form\" [formGroup]=\"coupenForm\">\n<div class=\"border rounded-1\">\n      <div class=\"form-group\">\n        <label for=\"Coupen Name\"><small>Name</small> </label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.name.errors.required\">Coupen Name is required</div>\n        </div>\n      </div>\n    \n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"Promo Type\"><small>Promo Type</small> </label>\n        <input type=\"text\" formControlName=\"promoType\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.promoType.errors }\" />\n        <div *ngIf=\"submitted && f.promoType.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.promoType.errors.required\">Promo Type is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"Promo Description\"><small>Promo Description</small> </label>\n        <input type=\"text\" formControlName=\"desc\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.desc.errors }\" />\n        <div *ngIf=\"submitted && f.desc.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.desc.errors.required\">Promo Description is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"amountOff\"><small>Amount</small> </label>\n        <input type=\"text\" formControlName=\"amountOff\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.amountOff.errors }\" />\n        <div *ngIf=\"submitted && f.amountOff.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.amountOff.errors.required\">Amount is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"limit\"><small>Upper Limit</small> </label>\n        <input type=\"text\" formControlName=\"limit\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.limit.errors }\" />\n        <div *ngIf=\"submitted && f.limit.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.limit.errors.required\">Upper Limit is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"userID\"><small>User ID</small> </label>\n        <input type=\"text\" formControlName=\"userID\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.userID.errors }\" />\n        <div *ngIf=\"submitted && f.userID.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.userID.errors.required\">User ID is required</div>\n        </div>\n      </div>\n</div>\n<div class=\"d-flex mt-2 flex-column\">\n        <div class=\"form-group col-md border rounded-1 flex-1\">\n            <label for=\"validFrom\"><small>Valid From</small> </label>\n            <input type=\"date\" formControlName=\"validFrom\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.validFrom.errors }\" />\n            <div *ngIf=\"submitted && f.validFrom.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.validFrom.errors.required\">User ID is required</div>\n            </div>\n          </div>\n  \n          <div class=\"form-group col-md border rounded-1 flex-1 mt-2\">\n            <label for=\"toDate\"><small>Valid Till</small> </label>\n            <input type=\"date\" formControlName=\"toDate\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.toDate.errors }\" />\n            <div *ngIf=\"submitted && f.toDate.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.toDate.errors.required\">User ID is required</div>\n            </div>\n          </div>\n\n</div>\n\n<div class=\"mt-2\">\n    <div class=\"form-group flex-direction-row justify-content-between mr-4\">\n        <label for=\"usageType\"><small>Usage Type</small> </label>\n        <div class=\"form-check checkbox custom-control custom-radio custom-control-inline\"\n        *ngFor=\"let item of usageType\">\n        <input class=\"custom-control-input\" \n        type=\"radio\" name=\"sizeFor\" [id]=\"item\" [value]=\"item\">\n        <label class=\"custom-control-label mt-0 mx-3 pt-0\" [for]=\"item\">\n            {{item}}\n        </label>\n    </div>\n        <div *ngIf=\"submitted && f.usageType.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.usageType.errors.required\">Usage Type is required</div>\n        </div>\n      </div>\n</div>\n\n<div class=\"border rounded-1 mt-2\">\n    <div class=\"form-group\">\n        <label for=\"coupenCode\"><small>Coupen Code</small> </label>\n        <input type=\"text\" formControlName=\"coupenCode\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.coupenCode.errors }\" />\n        <div *ngIf=\"submitted && f.coupenCode.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.coupenCode.errors.required\">Coupen Code is required</div>\n        </div>\n      </div>\n</div>\n\n<div class=\"mt-3\">\n    <div class=\"col-sm-12\">\n      <div class=\"text-center\">\n        <button class=\"btn create\" (click)=\"addCoupen()\">Create</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from \"@angular/core\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport Stepper from \"bs-stepper\";\nimport { AuthService } from \"../../services/auth.service\";\nimport {\n  delay,\n  exhaustMap,\n  retry,\n  retryWhen,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n} from \"rxjs/operators\";\nimport { NotifierService } from \"angular-notifier\";\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  txtEmail!: string;\n  txtPhone: any;\n  public stepper: Stepper | any;\n  emailIsValid!: boolean;\n  isOtpSend!: boolean;\n  state: any = [];\n  country: any = [];\n  otp: string = \"\";\n  error: string = \"\";\n  message!: string;\n  @ViewChild(\"customNotification\", { static: true })\n  customNotificationTmpl: any;\n  messageType!: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _router: Router,\n    private notifier: NotifierService\n  ) {}\n\n  ngOnInit(): void {\n    this.setStepper();\n    this.initialiseForm();\n    this.setFormValues();\n\n    this.state = this._authService.getState();\n    this.country = this._authService.getCity();\n  }\n\n  initialiseForm = () => {\n    this.registerForm = this.formBuilder.group({\n      UserName: [\"\", Validators.required],\n      MobileNumber: [\"\", Validators.required],\n      ShopName: [\"\", Validators.required],\n      State: [\"\", Validators.required],\n      Email: [\n        \"\",\n        [Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")],\n      ],\n      City: [\"\", Validators.required],\n      Pin: [\"\", Validators.required],\n      AddressLine1: [\"\", Validators.required],\n      AddressLine2: [\"\", Validators.required],\n      AddressLine3: [\"\"],\n      Landmark: [\"\"],\n      Country: [\"\", Validators.required],\n    });\n  };\n\n  setFormValues = () => {\n    this.registerForm.patchValue({\n      State: \"Maharashtra\",\n      Country: \"India\",\n    });\n  };\n\n  setStepper = () => {\n    this.stepper = new Stepper(document.querySelector(\"#stepper1\")!, {\n      linear: true,\n      animation: true,\n    });\n  };\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  register = () => {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this._authService\n      .registerSeller(this.registerForm.value)\n      .pipe()\n      .subscribe(\n        (data) => {\n          localStorage.setItem(\"STOREDETAILS\", JSON.stringify(data));\n          this.notifier.show({\n            message: data.ReturnMessage,\n            type: \"success\",\n            template: this.customNotificationTmpl,\n          });\n          this.loading = false;\n          this._router.navigate([\"/login\"]);\n        },\n        (error) => {\n          this.notifier.show({\n            message: error.error.error_description,\n            type: \"error\",\n            template: this.customNotificationTmpl,\n          });\n          this.loading = false;\n        }\n      );\n  };\n\n  next() {\n    this.stepper.next();\n  }\n\n  test() {\n\n  }\n  sendOtp = (txtEmail: any, txtPhone: any) => {\n    if (txtEmail) {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      this.emailIsValid = !re.test(txtEmail);\n      if (!re.test(txtEmail)) return;\n    }\n    this.isOtpSend = true;\n    const param = {\n      UserName: txtEmail || txtPhone,\n    };\n    this.loading = true;\n    this._authService\n      .generateOTP(param)\n      .pipe(\n        retryWhen((err) =>\n          err.pipe(\n            delay(3000),\n            scan((retrycount) => {\n              if (retrycount >= 1) {\n                throw err;\n              } else {\n                retrycount++;\n                return retrycount;\n              }\n            }, 0)\n          )\n        )\n      )\n      .subscribe((res) => {\n        console.log(res);\n        if (!res.ReturnValue) {\n          this.message = res.ReturnMessage;\n          this.messageType = \"error\";\n        } else {\n          this.loading = false;\n          this.stepper.to(2);\n          this.message = res.ReturnMessage;\n          this.messageType = \"success\";\n        }\n      });\n  };\n\n  onOtpChange = (event: string) => {\n    this.otp = event;\n  };\n\n  authorizeToken = () => {\n    console.log(this.stepper);\n    this.loading = true;\n    const param = {\n      grant_type: \"password\",\n      UserName: this.txtEmail,\n      password: this.otp,\n    };\n    this._authService\n      .authorizeToken(param)\n      .pipe\n      // retryWhen(err =>\n      //   err.pipe(delay(3000), scan((retrycount) => {\n      //     if (retrycount > 1) {\n      //       throw err;\n      //     } else {\n      //       retrycount++;\n      //       return retrycount;\n      //     }\n      //   }, 0)\n      //   ))\n      ()\n      .subscribe(\n        (res) => {\n          console.log(res);\n          localStorage.setItem(\"AUTH_TOKEN\", res.access_token);\n          localStorage.setItem(\"USER\", JSON.stringify(res));\n          this.loading = false;\n          this.message = \"\";\n          this.registerForm.patchValue({\n            UserName: res.userName,\n          });\n          this.next();\n        },\n        (error) => {\n          this.error = error.error.error_description;\n          this.loading = false;\n          this.message = \"\";\n          // console.log(error);\n        }\n      );\n  };\n\n  lastClick(event: any) {\n    console.log(event);\n  }\n}\n","<div class=\"modal-header\">\n  <span class=\"modal-title\">Register</span>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"activeModal.dismiss('Cross click')\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<notifier-container style=\"color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<div class=\"modal-body\">\n  <div class=\"container\">\n    <div id=\"stepper1\" class=\"bs-stepper\">\n      <div class=\"bs-stepper-header\">\n        <div class=\"step\" data-target=\"#test-l-1\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Email</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-2\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Verify OTP</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-3\" (onClick)=\"lastClick($event)\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-label\">Register</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"bs-stepper-content\">\n        <form>\n          <div id=\"test-l-1\" class=\"content\">\n            <div class=\"text-center d-flex flex-column align\">\n              <h4 style=\"color: #999999;\">Verify your contact details</h4>\n              <label style=\"color: #999999;\" for=\"exampleInputEmail1\"\n                >OTP will be send on your mail or mobile number for\n                verification</label\n              >\n              <div class=\"form-group\">\n                <input\n                  type=\"email\"\n                  class=\"form-control txt-input\"\n                  placeholder=\"Your Email Id\"\n                  (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n                  aria-label=\"mail\"\n                  [(ngModel)]=\"txtEmail\"\n                  (input)=\"txtPhone =''\"\n                  name=\"txtEmail\"\n                />\n                <label\n                  *ngIf=\"emailIsValid && txtEmail\"\n                  class=\"m-2 d-flex justify-content-center text-danger\"\n                  >Email is not valid\n                </label>\n                <div class=\"separator\">OR</div>\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">+91</span>\n                  </div>\n                  <input\n                    class=\"form-control txt-input txt-phone\"\n                    pattern=\"^[0-9]*$\"\n                    type=\"text\"\n                    maxlength=\"10\"\n                    (input)=\"txtEmail =''\"\n                    (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n                    placeholder=\"1111111111\"\n                    onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57))\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"txtPhone\"\n                    name=\"txtPhone\"\n                  />\n                </div>\n              </div>\n\n              <app-buttons\n                btnType=\"primary\"\n                label=\"Send Otp\"\n                (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n                [isLoading]=\"loading\"\n                [isDisabled]=\"!txtEmail && !txtPhone\"\n              ></app-buttons>\n            </div>\n          </div>\n          <div id=\"test-l-2\" class=\"content\">\n            <div\n              class=\"form-group text-center d-flex flex-column align justify-center-center\"\n            >\n              <div class=\"d-flex align-items-center\">\n                <img\n                  (click)=\"stepper.to(1)\"\n                  src=\".././../../assets/images/back.svg\"\n                  alt=\"My Happy SVG\"\n                />\n                <h4 style=\"color: #999999;\">Verify your contact details</h4>\n              </div>\n\n              <label style=\"color: #999999;\" for=\"exampleInputEmail1\">\n                Please enter OTP we’ve sent you on {{txtPhone ||\n                txtEmail}}</label\n              >\n              <div class=\"m-3\">\n                <ng-otp-input\n                  (onInputChange)=\"onOtpChange($event)\"\n                  [config]=\"{length:4}\"\n                  (keyup.enter)=\"authorizeToken()\"\n                ></ng-otp-input>\n              </div>\n              <label> {{message}}</label>\n\n              <div class=\"d-flex pr-2 pl-2 m-3\">\n                <label class=\"incorrect\">\n                  {{error}}\n                </label>\n\n                <app-buttons\n                  btnType=\"light\"\n                  label=\"Resend\"\n                  (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n                ></app-buttons>\n              </div>\n\n              <app-buttons\n                btnType=\"primary\"\n                label=\"Verify\"\n                (onClick)=\"authorizeToken()\"\n                [isLoading]=\"loading\"\n                [isDisabled]=\"otp.length < 4\"\n              ></app-buttons>\n            </div>\n          </div>\n          <div id=\"test-l-3\" class=\"content text-center\">\n            <!-- <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button> -->\n\n            <form class=\"mt-2\" [formGroup]=\"registerForm\">\n              <div class=\"container register-form\">\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"UserName\">User Name</label>\n                      <input\n                        type=\"text\"\n                        [attr.disabled]=\"true\"\n                        formControlName=\"UserName\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.UserName.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.UserName.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"MobileNumber\">Mobile Number</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"MobileNumber\"\n                        pattern=\"^[0-9]*$\"\n                        type=\"text\"\n                        maxlength=\"10\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.MobileNumber.errors }\"\n                        onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n                          (event.charCode >= 48 && event.charCode <= 57))\"\n                        autocomplete=\"off\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.MobileNumber.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.MobileNumber.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine1\">Address 1</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine1\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine1.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine1.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine1.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine2\">Address 2</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine2\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine2.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine2.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine2.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"AddressLine3\">Address 3</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"AddressLine3\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.AddressLine3.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.AddressLine3.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.AddressLine3.errors.required\">\n                          User Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Landmark\">Landmark</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"Landmark\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Landmark.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Landmark.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Landmark.errors.required\">\n                          Mobile number is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"ShopName\">Shop Name</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"ShopName\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.ShopName.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.ShopName.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.ShopName.errors.required\">\n                          Shop Name is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"State\">State</label>\n\n                      <ng-select\n                        [items]=\"state\"\n                        formControlName=\"State\"\n                        bindLabel=\"name\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.State.errors }\"\n                      >\n                      </ng-select>\n                      <div\n                        *ngIf=\"submitted && f.State.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.State.errors.required\">\n                          State is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Email\">Email</label>\n                      <input\n                        type=\"email\"\n                        formControlName=\"Email\"\n                        ngbAutoFocus\n                        class=\"form-control\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Email.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Email.errors.required\">\n                          Email is required\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"City\">City</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"City\"\n                        class=\"form-control\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.City.errors }\"\n                      />\n                      <!-- <div *ngIf=\"submitted && f.City.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.City.errors.required\">City is required</div>\n                        </div> -->\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <div class=\"form-group\">\n                      <label for=\"Country\">Country</label>\n\n                      <ng-select\n                        formControlName=\"Country\"\n                        bindLabel=\"Country\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Country.errors }\"\n                      >\n                        <ng-option *ngFor=\"let item of country\" [value]=\"item\">\n                          {{item}}\n                        </ng-option>\n                      </ng-select>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label for=\"Pin\">Pin</label>\n                      <input\n                        type=\"text\"\n                        formControlName=\"Pin\"\n                        class=\"form-control\"\n                        pattern=\"^[0-9]*$\"\n                        type=\"text\"\n                        maxlength=\"6\"\n                        onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n                        (event.charCode >= 48 && event.charCode <= 57))\"\n                        autocomplete=\"off\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.Pin.errors }\"\n                      />\n                      <div\n                        *ngIf=\"submitted && f.Pin.errors\"\n                        class=\"invalid-feedback\"\n                      >\n                        <div *ngIf=\"f.Pin.errors.required\">Zip is required</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"modal-footer form-group\">\n                <app-buttons\n                  btnType=\"secondary\"\n                  label=\"Back\"\n                  (onClick)=\"stepper.to(1)\"\n                ></app-buttons>\n\n                <app-buttons\n                  btnType=\"secondary\"\n                  label=\"Cancel\"\n                  (onClick)=\"activeModal.dismiss('Cross click')\"\n                ></app-buttons>\n\n                <app-buttons\n                  btnType=\"primary\"\n                  label=\"Register\"\n                  (onClick)=\"register()\"\n                  [isLoading]=\"loading\"\n                  [isDisabled]=\"!registerForm.valid\"\n                ></app-buttons>\n\n                <!-- <button\n                  [disabled]=\"registerForm.valid\"\n                  class=\"btn reg\"\n                  (click)=\"register()\"\n                  appBtn\n                  [appBtnStaus]=\"'success'\"\n                >\n                  <span\n                    *ngIf=\"loading\"\n                    class=\"spinner-border spinner-border-sm mr-1\"\n                  ></span>\n                  Register\n                </button> -->\n              </div>\n            </form>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'https://business-test-merasupermarket.azurewebsites.net/api/',\n  authUrl:'https://business-test-merasupermarket.azurewebsites.net/api-test/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Country} from './country';\n\nexport const COUNTRIES: Country[] = [\n  {\n  CoupenName:\"test1\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"On shopping of Rs 1500 and more\",\namountOff:60,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF1\"\n  },\n  {\n  CoupenName:\"test2\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"On shopping of Rs 1500 and more\",\namountOff:109,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF2\"\n  },\n  {\n    CoupenName:\"test3\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc3\",\namountOff:9,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF3\"\n  },\n  {\n    CoupenName:\"test4\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc4\",\namountOff:99,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF4\"\n  },\n  {\n    CoupenName:\"test5\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc5\",\n    amountOff:9988,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF5\"\n  },\n  {\n    CoupenName:\"test6\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc6\",\n    amountOff:7,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF6\"\n  },\n  {\n    CoupenName:\"test7\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc7\",\n    amountOff:7,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF7\"\n  },\n  {\n    CoupenName:\"test8\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc8\",\n    amountOff:8,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF8\"\n  },\n  {\n    CoupenName:\"test9\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc\",\namountOff:5,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF9\"\n  },\n  {\n    CoupenName:\"test9\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc\",\namountOff:50,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF10\"\n  },\n  {\n    CoupenName:\"test10\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc10\",\n    amountOff:500,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF11\"\n  },\n  {\n    CoupenName:\"test11\",\n    NumberToRedeem:\"100/300\",\n    promoDesc:\"desc11\",\n    amountOff:50,\n    upperLimit:\"5000\",\n    validFrom:\"1 March 21\",\n    validTill:\"31 March 21\",\n    userID:\"testUser\",\n    usageType:\"single\",\n    CoupenCode:\"Holi2121OFF12\"\n  },\n  {\n    CoupenName:\"test12\",\nNumberToRedeem:\"100/300\",\npromoDesc:\"desc12\",\namountOff:60,\nupperLimit:\"5000\",\nvalidFrom:\"1 March 21\",\nvalidTill:\"31 March 21\",\nuserID:\"testUser\",\nusageType:\"single\",\nCoupenCode:\"Holi2121OFF13\"\n  }\n];\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-readonly-input\",\n  templateUrl: \"./readonly-input.component.html\",\n  styleUrls: [\"./readonly-input.component.scss\"],\n})\nexport class ReadonlyInputComponent implements OnInit {\n  @Input() inputValue: any;\n  @Input() placeholder: any;\n  @Input() isReadonly: any;\n  @Output() valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  inputChange = (event: any) => {\n    this.valueChange.emit(event.currentTarget.value);\n  };\n}\n","<input\n  type=\"text\"\n  [value]=\"inputValue\"\n  [placeholder]=\"placeholder\"\n  class=\"m-1\"\n  [readonly]=\"isReadonly\"\n  (change)=\"inputChange($event)\"\n/>\n","<div class=\"row d-flex justify-content-center\">\n    <section class=\"card shadow flex-1 col-md-4 col-lg-2 m-1\" *ngFor=\"let item of productList\">\n      <img src=\"../../../assets/images/product-default.svg\" class=\"card-img-top\" alt=\"...\">\n      <div class=\"card-body\">\n        <p class=\"card-text mb-2\">{{item.Title}}</p>\n        <div class=\"d-flex\">\n          <p class=\"card-text font-weight-bold m-0\">₹ {{item.SellingPrice}}</p>\n          <p class=\"card-text m-0 ml-3\"><s>₹ {{item.MRP}}</s></p>\n        </div>\n        <p class=\"card-text m-0 ml-3 mb-2 save\" style=\"color: #f89838;\">Save ₹ {{item.MRP-item.SellingPrice}}</p>\n        <button class=\"btn btn-lg btn-block edit\">Edit</button>\n      </div>\n    </section>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n@Input() productList: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    // console.log(this.productList);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-buttons\",\n  templateUrl: \"./buttons.component.html\",\n  styleUrls: [\"./buttons.component.scss\"],\n})\nexport class ButtonsComponent implements OnInit {\n  @Input() label: string = \"\";\n  @Input() btnType: string = \"\";\n  @Input() isLoading: boolean = false;\n  @Input() isDisabled: boolean = true;\n  @Output() onClick = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onClickButton(event: any) {\n    this.onClick.emit(event);\n  }\n}\n","<button\n  type=\"button\"\n  class=\"btn light\"\n  *ngIf=\"btnType === 'light'\"\n  (click)=\"onClickButton($event)\"\n>\n  {{ label }}\n</button>\n\n<button\n  type=\"button\"\n  class=\"btn primary\"\n  *ngIf=\"btnType === 'primary'\"\n  (click)=\"onClickButton($event)\"\n  [disabled]=\"isDisabled\"\n>\n  <span\n    *ngIf=\"isLoading\"\n    class=\"spinner-border spinner-border-sm mr-4\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  ></span\n  >{{ label }}\n</button>\n\n<button (click)=\"onClickButton($event)\" class=\"btn secondary\"   *ngIf=\"btnType === 'secondary'\">\n  {{ label }}\n</button>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-float-text\",\n  templateUrl: \"./float-text.component.html\",\n  styleUrls: [\"./float-text.component.scss\"],\n})\nexport class FloatTextComponent implements OnInit {\n  isEdit: boolean = true;\n  @Input() label: string = \"\";\n  @Input() value: string = \"\";\n  @Input() type:string=\"\";\n  @Input() errorMsg:string=\"\"\n  @Output() onChange = new EventEmitter();\n  \n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.onChange.emit(this.value);\n  }\n  /**\n   * Change\n   */\n  getValue(event:any){\n    this.value = event.currentTarget.value;\n    this.onChange.emit(event.currentTarget.value);\n  }\n}\n","<div class=\"border rounded-1\">\n  <p class=\"mb-0\">\n    <small>{{label}}</small>\n    <img\n      src=\"../../../../assets/images/pencil-alt-solid.svg\"\n      class=\"float-right\"\n      (click)=\"isEdit = !isEdit\"\n      *ngIf=\"isEdit\"\n    />\n    <img\n      src=\"../../../../assets/images/selected.svg\"\n      class=\"float-right\"\n      (click)=\"isEdit = !isEdit\"\n      *ngIf=\"!isEdit\"\n    />\n  </p>\n  <p class=\"name\" *ngIf=\"isEdit\">{{value}}</p>\n  <textarea\n    type=\"text\"\n    *ngIf=\"!isEdit && type === 'textArea'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n  ></textarea>\n\n  <input\n    type=\"tel\"\n    *ngIf=\"!isEdit && type === 'number'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n    maxlength=\"10\"\n  />\n\n  <input\n    type=\"text\"\n    *ngIf=\"!isEdit && type === 'text'\"\n    class=\"input-box name\"\n    [ngClass]=\"isEdit?'text-readonly':''\"\n    [value]=\"value\"\n    [readonly]=\"isEdit\"\n    (input)=\"getValue($event)\"\n  />\n  <label *ngIf=\"errorMsg\" class=\"label-err-msg\">{{errorMsg}}</label>\n</div>\n","import { HostListener, Injectable } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HostListerService {\n  screenWidth!: number;\n  screenHeight!: number;\n\n  constructor() { }\n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    //console.log(this.screenHeight, this.screenWidth);\n   return {\n    screenHeight:this.screenHeight,\n    screenWidth: this.screenWidth\n   }\n  }\n\n  counter=()=>{\n    return interval(1000).pipe(take(30)); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { Observable, throwError } from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\nAUTH_TOKEN='auth_token';\n  constructor(private httpClient:HttpClient) { }\n\n  get(url: string, params?: any,headers?:any): Observable<any> {\n    const data = { headers: headers};\n    return this.httpClient\n      .get(url, data).\n\t  pipe(catchError(this.errorHandler.bind(this)));\n  }\n  \n  post(url: string, params?: any,headers?:any): Observable<any> {\n    // const data = {params, headers: this.getAuthHeader()};\n    return this.httpClient\n      .post(url, params,headers).\n\t  pipe(catchError(this.errorHandler.bind(this)));\n  }\n\n  private errorHandler(response: any) {\n    const error = response.error;\n    const keys = Object.keys(error);\n    const key = keys[0];\n    let message = error[key];\n    if (response.status === 401) {\n      // auth token delete\n      // redirect login page\n    }\n    if (error[key] instanceof Array) {\n      message = error[key][0];\n    }\n    if (key === 'isTrusted') {\n      // this will occur when not connected to internet\n    } else {\n      message = key + ' : ' + message;\n    }\n    // call snackbar and show error with message\n    return throwError({messages: message, error});\n  }\n\n  private getAuthHeader(): { [header: string]: string | string[]; } {\n    return {\n      Authorization: `Bearer ${localStorage.getItem(this.AUTH_TOKEN)}`\n    };\n  }\n}\n","import { HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpService } from \"./http.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AppService {\n  baseUrl = environment.baseUrl;\n  authUrl = environment.authUrl;\n  constructor(private _httpService: HttpService) {}\n\n  getAllProducts = () => {\n    return this._httpService.get(\n      environment.authUrl + \"Product\",\n      \"\",\n      this.getAuthHeader()\n    );\n  };\n  private getAuthHeader = () => {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n    });\n    return headers;\n  };\n\n  /**\n   * Validate Unique Id\n   */\n  validateUniqueId = (id: any) => {\n    return this._httpService.post(\n      environment.authUrl + \"Seller/ValidateUniqueId\",\n      id,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  /**\n   * Upload Banner Image\n   */\n  uploadBannerImage = (payload: any) => {\n    return this._httpService.post(\n      environment.authUrl + \"FileLoad/UploadBannerImage\",\n      payload,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  /**\n   * Upload Profile Image\n   */\n  uploadProfileImage = (payload: any) => {\n    return this._httpService.post(\n      environment.authUrl + \"FileLoad/UploadProfileImage\",\n      payload,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  /**\n   * Get Seller Details\n   */\n  getSellerDetails = () => {\n    return this._httpService.get(\n      environment.authUrl + \"Seller\",\n      \"\",\n      this.getAuthHeader()\n    );\n \n  };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'seller-app';\n  showHead: boolean = false;\n\n\n\n  constructor(private router: Router, private _authService: AuthService) {\n    router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n        if (event['url'] == '/login') {\n          this.showHead = false;\n        } else {\n          this.showHead = true;\n        }\n      }\n    });\n  }\n  ngOnInit() {\n    // this._authService.refreshToken().subscribe(res=>{\n    //   console.log(res);\n    //   localStorage.setItem('USER',res);\n    // },error=>{\n    //   if(error.error.error=='invalid_grant')\n    //   this.router.navigate(['/login']);\n    // });\n  }\n}\n","<ngx-loading-bar [color]=\"'#f89838 '\"></ngx-loading-bar>\n<app-header *ngIf=\"showHead\"></app-header>\n<div class=\"my-router-outlet\">\n    <router-outlet></router-outlet>\n</div>\n<!-- <app-footer>\n</app-footer> -->\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {Country} from './country';\n\nexport type SortColumn = keyof Country | '';\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\n\nexport interface SortEvent {\n  column: SortColumn;\n  direction: SortDirection;\n}\n\n@Directive({\n  selector: 'th[sortable]',\n  host: {\n    '[class.asc]': 'direction === \"asc\"',\n    '[class.desc]': 'direction === \"desc\"',\n    '(click)': 'rotate()'\n  }\n})\nexport class NgbdSortableHeader {\n\n  @Input() sortable: SortColumn = '';\n  @Input() direction: SortDirection = '';\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  rotate() {\n    this.direction = rotate[this.direction];\n    this.sort.emit({column: this.sortable, direction: this.direction});\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { NotifierModule, NotifierOptions } from \"angular-notifier\";\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TagInputModule } from 'ngx-chips';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './modules/login/login.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { RegisterComponent } from './model/register/register.component';\nimport { HomeComponent } from './modules/home/home.component';\nimport { MyOrdersComponent } from './modules/my-orders/my-orders.component';\nimport { CoupenComponent } from './modules/coupen/coupen.component';\nimport { ContactComponent } from './component/contact/contact.component';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { SidebarModule } from 'ng-sidebar';\nimport { NgbdSortableHeader } from './modules/coupen/coupen-list/sortable.directive';\nimport { PageSetupComponent } from './component/shared/page-setup/page-setup.component';\nimport { AddProductComponent } from './model/add-product/add-product.component';\n\nimport { AuthService } from \"./services/auth.service\";\nimport { HostListerService } from \"./helper/host-lister.service\";\nimport { OrderDetailComponent } from './modules/my-orders/order-detail/order-detail.component';\nimport { CreateCoupenComponent } from './component/shared/create-coupen/create-coupen.component';\nimport { CoupenListComponent } from './modules/coupen/coupen-list/coupen-list.component';\nimport { AppBtnDirective } from './directive/sucess-btn.directive';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { CardComponent } from './shared/card/card.component';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { PriceMoverComponent } from './shared/price-mover/price-mover.component';\nimport { ButtonsComponent } from './component/buttons/buttons.component';\nimport { FloatTextComponent } from './component/float-text/float-text.component';\nimport { ReadonlyInputComponent } from './component/readonly-input/readonly-input.component';\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n    horizontal: {\n      position: \"right\",\n      distance: 50,\n    },\n    vertical: {\n      position: \"top\",\n      distance: 50,\n      gap: 10,\n    },\n  },\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    RegisterComponent,\n    HomeComponent,\n    MyOrdersComponent,\n    CoupenComponent,\n    ContactComponent,\n    PageSetupComponent,\n    AddProductComponent,\n    OrderDetailComponent,\n    CreateCoupenComponent,\n    CoupenListComponent,\n    NgbdSortableHeader,\n    AppBtnDirective,\n    FooterComponent,\n    CardComponent,\n    PriceMoverComponent,\n    ButtonsComponent,\n    FloatTextComponent,\n    ReadonlyInputComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    NgOtpInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxFileDropModule,\n    SidebarModule.forRoot(),\n    NotifierModule.withConfig(customNotifierOptions),\n    TagInputModule,\n    BrowserAnimationsModule,\n    LoadingBarModule,\n    NgSelectModule,\n    LoadingBarHttpClientModule\n  ],\n  providers: [AuthService, HostListerService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [],\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal, NgbModalConfig } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AuthService } from \"../../services/auth.service\";\nimport {\n  delay,\n  exhaustMap,\n  retry,\n  retryWhen,\n  scan,\n  map,\n  share,\n  shareReplay,\n  switchMap,\n  startWith,\n  take,\n} from \"rxjs/operators\";\nimport { NotifierService } from \"angular-notifier\";\nimport { RegisterComponent } from \"../../model/register/register.component\";\nimport { interval, Subscription, timer } from \"rxjs\";\nimport { HostListerService } from \"src/app/helper/host-lister.service\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n  providers: [NgbModalConfig],\n})\nexport class LoginComponent implements OnInit {\n  isOtpSend = false;\n  txtEmail: any;\n  txtPhone: any;\n  name: any;\n  email: any;\n  emailIsValid = false;\n  loading = false;\n  counterValue = 30;\n  @ViewChild(\"customNotification\", { static: true })\n  customNotificationTmpl: any;\n  error: any;\n  otp: any;\n  countSubscribe!: Subscription;\n  responseMessage: string = \"\";\n  isEmailMode: boolean = false;\n  isOtpValid: boolean = true;\n\n  constructor(\n    public modalService: NgbModal,\n    private _router: Router,\n    config: NgbModalConfig,\n    private _authService: AuthService,\n    private _hs: HostListerService,\n    private notifier: NotifierService\n  ) {\n    config.backdrop = \"static\";\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {}\n\n  sendOtp = (txtEmail: any, txtPhone: any) => {\n    if (txtEmail) {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      this.emailIsValid = !re.test(txtEmail);\n      if (!re.test(txtEmail)) return;\n    }\n\n    this.countSubscribe = this._hs.counter().subscribe((res) => {\n      this.counterValue = 30;\n      this.counterValue = this.counterValue - (res + 1);\n    });\n\n    this.loading = true;\n    const param = {\n      UserName: txtEmail || txtPhone,\n    };\n    this._authService\n      .generateOTP(param)\n      .pipe(\n        retryWhen((err) =>\n          err.pipe(\n            delay(3000),\n            scan((retrycount) => {\n              if (retrycount >= 1) {\n                throw err;\n              } else {\n                retrycount++;\n                return retrycount;\n              }\n            }, 0)\n          )\n        )\n      )\n      .subscribe(\n        (res) => {\n          this.countSubscribe.unsubscribe();\n          this.isOtpSend = true;\n          this.responseMessage = res.ReturnMessage;\n          this.loading = false;\n        },\n        (error) => {\n          this.error = error.error.error_description;\n          this.loading = false;\n        }\n      );\n  };\n\n  resendOtp(event: any) {\n    this.isOtpSend = false;\n  }\n\n  authorizeToken = () => {\n    this.loading = true;\n    const param = {\n      grant_type: \"password\",\n      UserName: this.txtEmail || this.txtPhone,\n      password: this.otp,\n    };\n    this._authService\n      .authorizeToken(param)\n      .pipe()\n      .subscribe(\n        (res) => {\n          localStorage.setItem(\"AUTH_TOKEN\", res.access_token);\n          localStorage.setItem(\"USER\", JSON.stringify(res));\n          this.loading = false;\n          this._router.navigate([\"/home\"]);\n          this._authService.sellername.next(res.storeName);\n        },\n        (error) => {\n          this.responseMessage = error.error.error_description;\n          this.error = error.error.error_description;\n          this.loading = false;\n\n          // console.log(error);\n        }\n      );\n  };\n\n  register() {\n    this.modalService.open(RegisterComponent, {\n      size: \"lg\",\n      windowClass: \"custom-class\",\n      backdrop: \"static\",\n      keyboard: false,\n    });\n    //modalRef.componentInstance.src = link;\n  }\n  onOtpChange = (event: any) => {\n    this.otp = event;\n    this.isOtpValid = this.otp.length !== 6;\n  };\n}\n","<!-- Navigation -->\n<notifier-container style=\"color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<nav\n  class=\"navbar navbar-default navbar-expand-lg static-top bg-white rounded pt-0\"\n>\n  <div class=\"wrapper container col-md-12 col-sm-12\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"../../../assets/images/logo.svg\" />\n    </a>\n    <div>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item mr-5\">\n          <a class=\"nav-link\" href=\"#\">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<div class=\"container login-div p-0\">\n  <div>\n    <img class=\"svg-image\" src=\"../../../assets/images/bg.svg\" />\n  </div>\n  <div class=\"container welcome-div col-md-5 col-sm-5 col-sm\">\n    <section class=\"welcome-header\">\n      <h2>Welcome to</h2>\n      <h2 class=\"welcome\">Mera Super Market</h2>\n    </section>\n    <label class=\"otp\"\n      >OTP will be send on your mail or mobile number for verification</label\n    >\n    <div *ngIf=\"!isOtpSend\">\n      <h3>Login</h3>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        placeholder=\"Your Email Id\"\n        aria-label=\"mail\"\n        [(ngModel)]=\"txtEmail\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n        required\n        name=\"txtEmail\"\n        (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n        (input)=\"txtPhone =''\"\n      />\n\n      <label\n        *ngIf=\"emailIsValid && txtEmail\"\n        class=\"m-2 d-flex justify-content-center text-danger\"\n        >Email is not valid\n      </label>\n      <div class=\"separator\">OR</div>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">+91</span>\n        </div>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          pattern=\"^[0-9]*$\"\n          type=\"text\"\n          maxlength=\"10\"\n          placeholder=\"1111111111\"\n          (input)=\"txtEmail =''\"\n          (keyup.enter)=\"sendOtp(txtEmail,txtPhone)\"\n          onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n            (event.charCode >= 48 && event.charCode <= 57))\"\n          autocomplete=\"off\"\n          [(ngModel)]=\"txtPhone\"\n          name=\"txtPhone\"\n        />\n      </div>\n      <label class=\"d-flex justify-content-center\"\n        >Resend code in 0:{{counterValue}}</label\n      >\n      <app-buttons\n        btnType=\"primary\"\n        label=\"Send Otp\"\n        (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n        [isLoading]=\"loading\"\n        [isDisabled]=\"!txtEmail && !txtPhone\"\n      ></app-buttons>\n\n      <label class=\"d-flex justify-content-center\">\n        Dont have account?\n        <span class=\"reg-link ml-2 pointer\" (click)=\"register()\"\n          >Register</span\n        ></label\n      >\n    </div>\n    <div class=\"verify-otp\" *ngIf=\"isOtpSend\">\n      <div class=\"d-flex align-items-center\">\n        <img\n          (click)=\"isOtpSend=false\"\n          src=\".././../../assets/images/back.svg\"\n          alt=\"My Happy SVG\"\n        />\n        <h5 class=\"verify-lbl ml-4\">Verify Mobile Number</h5>\n      </div>\n      <label class=\"mt-2 d-flex justify-content-center\"\n        >Please enter OTP we’ve sent you on\n      </label>\n\n      <label class=\"mt-2 d-flex justify-content-center\">\n        <!-- (+91) {{txtPhone}} -->\n        {{txtEmail||txtPhone}}\n      </label>\n\n      <div class=\"sm-device\">\n        <ng-otp-input\n          (onInputChange)=\"onOtpChange($event)\"\n          [config]=\"{length:6}\"\n          (keyup.enter)=\"authorizeToken()\"\n        ></ng-otp-input>\n      </div>\n      <label class=\"mt-2 d-flex justify-content-center\"\n        >{{ responseMessage}}\n      </label>\n\n      <div class=\"d-flex pr-2 pl-2\">\n        <app-buttons\n          btnType=\"light\"\n          label=\"Resend\"\n          (onClick)=\"sendOtp(txtEmail,txtPhone)\"\n        ></app-buttons>\n      </div>\n\n      <app-buttons\n        btnType=\"primary\"\n        label=\"Verify\"\n        (onClick)=\"authorizeToken()\"\n        [isLoading]=\"loading\"\n        [isDisabled]=\"isOtpValid\"\n      ></app-buttons>\n\n      <label class=\"d-flex justify-content-center register\">\n        Dont have account?\n        <app-buttons\n          btnType=\"light\"\n          label=\"Register\"\n          (onClick)=\"register()\"\n        ></app-buttons>\n      </label>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor( private _au:AuthService,private router:Router){\n\n  }\n  canActivate():boolean{\n    if(this._au.isLoggedIn()) {\n      return true;\n    } else{\n      this.router.navigate(['/login']);\n     return false;\n    }\n  }\n \n \n  \n}\n","import { Component, OnInit,QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\nimport {Observable} from 'rxjs';\n\nimport {Country} from './country';\nimport {CountryService} from './country.service';\nimport {NgbdSortableHeader, SortEvent} from './sortable.directive'\n\n@Component({\n  selector: 'app-coupen-list',\n  templateUrl: './coupen-list.component.html',\n  styleUrls: ['./coupen-list.component.scss'],\n  encapsulation:ViewEncapsulation.None,\n  providers: [CountryService, DecimalPipe]\n})\nexport class CoupenListComponent implements OnInit {\n  countries$: Observable<Country[]>;\n  total$: Observable<number>;\n  \n  @ViewChildren(NgbdSortableHeader) headers!: QueryList<NgbdSortableHeader>;\n  constructor(public service: CountryService) {\n    this.countries$ = service.countries$;\n    this.total$ = service.total$;\n  }\n  onSort({column, direction}: SortEvent) {\n    // resetting other headers\n    this.headers.forEach(header => {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n\n    this.service.sortColumn = column;\n    this.service.sortDirection = direction;\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"m-3\">\n  <div class=\"form-group form-inline d-flex\">\n      <p class=\"flex-grow-1 justify-content-center\"> Coupon Records </p>\n      <input class=\"form-control ml-2 search-input shadow-sm\" placeholder=\"search\" type=\"text\" name=\"searchTerm\" [(ngModel)]=\"service.searchTerm\"/>\n      <!-- <span class=\"ml-3\" *ngIf=\"service.loading$ | async\">Loading...</span> -->\n  </div>\n\n  <table class=\"table\">\n    <thead> \n    <tr class=\"card shadow tbl-header\">\n      <th scope=\"col\">Coupon Name</th>\n      <th scope=\"col\">Number To Redeem</th>\n      <th scope=\"col\" class=\"promoDesc\">Promo Desc</th>\n      <th scope=\"col\" sortable=\"amountOff\" (sort)=\"onSort($event)\">Amount Off</th>\n      <th scope=\"col\" sortable=\"upperLimit\" (sort)=\"onSort($event)\">Upper Limit</th>\n      <th scope=\"col\" sortable=\"validFrom\" (sort)=\"onSort($event)\">Valid From</th>\n      <th scope=\"col\" sortable=\"validTill\" (sort)=\"onSort($event)\">Valid Till</th>\n      <th scope=\"col\" sortable=\"userID\" (sort)=\"onSort($event)\">User ID</th>\n      <th scope=\"col\" sortable=\"usageType\" (sort)=\"onSort($event)\">Usage Type</th>\n      <th scope=\"col\">CoupenCode</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let country of countries$ | async\" >\n      <td><ngb-highlight [result]=\"country.CoupenName\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.NumberToRedeem\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.promoDesc\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.amountOff | number\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.upperLimit\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.validFrom\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.validTill\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.userID\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.usageType\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n      <td><ngb-highlight [result]=\"country.CoupenCode\" [term]=\"service.searchTerm\"></ngb-highlight></td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"card shadow\" style=\"width: auto; margin: 0 auto;\">\n  <div class=\"d-flex justify-content-between card-header\">\n      <div>\n   <label class=\"lbl\">Rows Per Page: </label>\n    <select class=\"cust-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"service.pageSize\">\n        <option [ngValue]=\"5\">5</option>\n        <option [ngValue]=\"10\">10</option>\n        <option [ngValue]=\"20\">20</option>\n        <option [ngValue]=\"25\">25</option>\n      </select>\n    </div>\n    <ngb-pagination\n      [collectionSize]=\"(total$ | async)!\" [(page)]=\"service.page\" [pageSize]=\"service.pageSize\">\n    </ngb-pagination>\n    \n  </div>\n</div>\n</form>\n","import {\n  AfterViewInit,\n  Component,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NotifierService } from \"angular-notifier\";\nimport { NgbModal, NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport {\n  FormControl,\n  FormArray,\n  FormGroup,\n  Validators,\n  FormBuilder,\n} from \"@angular/forms\";\nimport {\n  NgxFileDropEntry,\n  FileSystemFileEntry,\n  FileSystemDirectoryEntry,\n} from \"ngx-file-drop\";\n\ninterface ICustomer {\n  key: string;\n  value: string;\n}\n\n@Component({\n  selector: \"app-add-product\",\n  templateUrl: \"./add-product.component.html\",\n  styleUrls: [\"./add-product.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AddProductComponent implements OnInit, AfterViewInit {\n  @ViewChild(\"customNotification\", { static: true })\n  customNotificationTmpl: any;\n  addProductForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  public files: NgxFileDropEntry[] = [];\n  images: any = [];\n  img: any;\n  time!: number;\n  specifications: ICustomer[] = [];\n  key!: string;\n  value!: string;\n  isError = false;\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private sanitizer: DomSanitizer,\n    private notifier: NotifierService\n  ) {}\n  tag = [\"Pizza\", \"Pasta\", \"Parmesan\"];\n  size = [\"S\", \"M\", \"L\"];\n  sizeFor = [\"Men\", \"Women\", \"kid\"];\n  gender = [\"Boys\", \"Girls\"];\n  status = [\"In Stock\", \"Out of Stock\"];\n  shippableProductStatus = [\"Yes\", \"No\"];\n  deliveryOption = [\n    {\n      name: \"Pick up\",\n      value: true,\n    },\n    {\n      name: \"Delivery\",\n      value: false,\n    },\n  ];\n  ngOnInit(): void {\n    this.addProductForm = this.formBuilder.group({\n      Title: [\"\", Validators.required],\n      ProductId: [\"\"],\n      SellingPrice: [100, Validators.required],\n      MRP: [100, Validators.required],\n      Tags: [\"\", Validators.required],\n      Description: [\"\", Validators.required],\n      Delivery: [\"\", Validators.required],\n      ShippingCost: [100, Validators.required],\n      Size: [\"\", Validators.required],\n      Color: [\"\", Validators.required],\n      BrandName: [\"\", Validators.required],\n      GST: [\"\"],\n      TaxablePrice: [\"\"],\n      MaxItemInOneShipment: [\"\"],\n      Category: [\"\", Validators.required],\n      Target: [\"\"],\n      sizeFor: [\"\", Validators.required],\n      AvailabilityStatus: [\"\", Validators.required],\n      Specification: [\"\", Validators.required],\n      shipStatus: [\"\", Validators.required],\n    });\n  }\n  ngAfterViewInit() {}\n  get f() {\n    return this.addProductForm.controls;\n  }\n\n  addProduct = () => {\n    this.submitted = true;\n    let prodDetails = this.addProductForm.value;\n    console.log(this.addProductForm.value);\n\n    let payload = {\n      Title: prodDetails[\"Title\"],\n      ProductId: \"\",\n      SellingPrice: prodDetails[\"SellingPrice\"],\n      MRP: prodDetails[\"MRP\"],\n      Tags: prodDetails[\"Tags\"].toString(),\n      Description: prodDetails[\"Description\"],\n      Delivery:\n        '{\"IsShipable\":\"Yes\",\"IsDeliverable\":\"Yes\",\"PickupAvailable\":\"No\"}',\n      ShippingCost: prodDetails[\"ShippingCost\"],\n      Size: prodDetails[\"ShippingCost\"].toString(),\n      Color: prodDetails[\"Color\"],\n      BrandName: prodDetails[\"BrandName\"],\n      Category: \"Fashion\",\n      Specification:\n        '[{\"Key\":\"Brand\",\"Value\":\"MeraBrand\"},{\"Key\":\"Price\",\"Value\":\"1200.00\"}]',\n      GST: prodDetails[\"GST\"],\n      MaxItemInOneShipment: \"1\",\n      AvailabilityStatus: \"In Stock\",\n      Target: '{\"Men\":true,\"Women\":true,\"Kids\":true,\"Gender\":\"girls\"}',\n    };\n    // stop here if form is invalid\n    if (this.addProductForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    // this.userService.addProduct(this.addProductForm.value)\n    //     .pipe(first())\n    //     .subscribe(\n    //         data => {\n    //             this.alertService.success('Registration successful', true);\n    //             this.router.navigate(['/login']);\n    //         },\n    //         error => {\n    //             this.alertService.error(error);\n    //             this.loading = false;\n    //         });\n  };\n  public dropped(files: NgxFileDropEntry[]) {\n    if (files.length > 4) {\n      this.notifier.show({\n        message: \"Cannot add more than 4 Files at a time.\",\n        type: \"error\",\n        template: this.customNotificationTmpl,\n      });\n    } else {\n      // this.files = files;\n      this.imageDropped(files);\n      for (const droppedFile of files) {\n        // Is it a file?\n        if (\n          droppedFile.fileEntry.isFile &&\n          this.isFileAllowed(droppedFile.fileEntry.name)\n        ) {\n          const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n          fileEntry.file((file: File) => {\n            if (this.isFileSizeAllowed(file.size)) {\n              //files array is used to display\n              //the files to the user which will be uploaded\n              this.files.push(droppedFile);\n              if (this.files.length < 6) {\n                // Here you can access the real file\n                console.log(droppedFile.relativePath, file);\n                const formData = new FormData();\n                //   this.formData.append(`img${this.index}`, file, droppedFile.relativePath);\n                //  this.index++;\n\n                /**\n                // You could upload it like this:\n                const formData = new FormData()\n                formData.append('logo', file, relativePath)\n       \n                // Headers\n                const headers = new HttpHeaders({\n                  'security-token': 'mytoken'\n                })\n       \n                this.http.post('https://mybackend.com/api/upload/sanitize-and-save-logo', formData, { headers: headers, responseType: 'blob' })\n                .subscribe(data => {\n                  // Sanitized logo returned from backend\n                })\n                **/\n              } else {\n                // this.toastr.error(\"Maximum 6 files are allowed.\");\n              }\n            } else {\n              // this.toastr.error(\"Max size of a file allowed is 1mb, files with size more than 1mb are discarded.\");\n            }\n          });\n        } else {\n          // It was a directory (empty directories are added, otherwise only files)\n          // this.toastr.error(\"Only files in '.pdf', '.jpg', '.jpeg', '.png' format are accepted and directories are not allowed.\");\n          // const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n          // console.log(droppedFile.relativePath, fileEntry);\n        }\n      }\n    }\n  }\n\n  isFileAllowed(fileName: string) {\n    let isFileAllowed = false;\n    const allowedFiles = [\".pdf\", \".jpg\", \".jpeg\", \".png\"];\n    const regex = /(?:\\.([^.]+))?$/;\n    const extension = regex.exec(fileName);\n    if (undefined !== extension && null !== extension) {\n      for (const ext of allowedFiles) {\n        if (ext === extension[0]) {\n          isFileAllowed = true;\n        }\n      }\n    }\n    return isFileAllowed;\n  }\n\n  isFileSizeAllowed(size: number) {\n    let isFileSizeAllowed = false;\n    if (size < 1000000) {\n      isFileSizeAllowed = true;\n    }\n    return isFileSizeAllowed;\n  }\n\n  imageDropped($event: any) {\n    for (const item of $event) {\n      const droppedFile = item;\n      const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n      const reader = new FileReader();\n      fileEntry.file((file) => {\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.img = reader.result;\n          this.images.push(\n            this.sanitizer.bypassSecurityTrustResourceUrl(this.img)\n          );\n          // this.images.push(this.img);\n        };\n      });\n    }\n  }\n\n  add(key: any, value: any) {\n    let obj: any = [];\n    if (key && value) {\n      obj = { key, value };\n      this.specifications.push(obj);\n      this.key = \"\";\n      this.value = \"\";\n    } else {\n      this.isError = true;\n      this.notifier.show({\n        type: \"error\",\n        message: \"Please enter both values\",\n        template: this.customNotificationTmpl,\n      });\n    }\n  }\n  delete(arr: any, x: number) {\n    // var delBtn = confirm(\" Do you want to delete ?\");\n    // if ( delBtn == true ) {\n    arr.splice(x, 1);\n    // }\n  }\n\n  change(name: string, $event: any) {\n    console.log(name);\n    console.log($event);\n  }\n}\n","<notifier-container style=\"color: white;\"></notifier-container>\n<ng-template #customNotification let-notificationData=\"notification\">\n  <my-custom-alert type=\"notificationData.type\">\n    {{ notificationData.message }}\n  </my-custom-alert>\n</ng-template>\n<div class=\"modal-header\">\n  <span class=\"modal-title\">Add Product</span>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"activeModal.dismiss('Cross click')\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form class=\"mt-2\" [formGroup]=\"addProductForm\" (ngSubmit)=\"addProduct()\">\n    <span class=\"title\"\n      >Images <span class=\"limit\">(Add upto 4 images)</span>\n    </span>\n    <div class=\"row\">\n      <div class=\"col-sm col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-5 img_wrp m-1\" *ngFor=\"let item of images; let i=index\">\n            <img\n              [src]=\"item\"\n              width=\"100%\"\n              height=\"100\"\n              class=\"imgResponsiveMax\"\n              alt=\"\"\n            />\n            <!-- <img src=\"../../../../assets/images/close.svg\" height= 20 class=\"img-close\" aria-label=\"Close\" class=\"imgResponsiveMax\" (click)=\"removeImage(i)\"/> -->\n            <span\n              class=\"img-close\"\n              aria-label=\"Close\"\n              aria-hidden=\"true\"\n              (click)=\"delete(images,i)\"\n              >&times;</span\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm col-md-6\">\n        <div class=\"form-group\">\n          <ngx-file-drop\n            dropZoneLabel=\"Drop files here\"\n            (onFileDrop)=\"dropped($event)\"\n            [dropZoneClassName]=\"'upload-background-image'\"\n          >\n            <ng-template\n              ngx-file-drop-content-tmp\n              let-openFileSelector=\"openFileSelector\"\n            >\n              <div class=\"d-flex flex-column mt-5\">\n                <img class=\"cloud\" src=\"../../../../assets/images/cloud.svg\" />\n                <span\n                  >Drag and Drop files or\n                  <span\n                    type=\"button\"\n                    (click)=\"openFileSelector()\"\n                    class=\"browse\"\n                  >\n                    Browse</span\n                  ></span\n                >\n                <button type=\"button\" class=\"btn btn-upload\"  (click)=\"openFileSelector()\">Upload</button>\n              </div>\n            </ng-template>\n          </ngx-file-drop>\n        </div>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Title\">Product Name</label>\n            <input\n              type=\"text\"\n              formControlName=\"Title\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Title.errors }\"\n              ngbAutoFocus\n            />\n            <div *ngIf=\"submitted && f.Title.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Title.errors.required\">\n                Product Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"BrandName\">Brand Name</label>\n            <input\n              type=\"text\"\n              formControlName=\"BrandName\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.BrandName.errors }\"\n            />\n            <div\n              *ngIf=\"submitted && f.BrandName.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.BrandName.errors.required\">\n                Brand Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Category\">Select Category</label>\n            <!-- <input type=\"text\" formControlName=\"Category\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.Category.errors }\" /> -->\n            <select\n              class=\"form-control form-select\"\n              aria-label=\"Default select example\"\n            >\n              <option selected>Open this select menu</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n            <div\n              *ngIf=\"submitted && f.Category.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.Category.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <tag-input\n              class=\"tag\"\n              [(ngModel)]=\"tag\"\n              formControlName=\"Tags\"\n              placeholder=\"+Add tag\"\n            ></tag-input>\n            <div *ngIf=\"submitted && f.Tags.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Tags.errors.required\">Tag required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Description\">Description</label>\n            <!-- <p class=\"Description\">\n              Combination of taste and health Highly nutritive source of strength of body and mind country of Origin:\n              India\n            </p> -->\n            <textarea\n              class=\"form-control rounded-0\"\n              formControlName=\"Description\"\n              id=\"exampleFormControlTextarea2\"\n              rows=\"3\"\n            ></textarea>\n\n            <div\n              *ngIf=\"submitted && f.Description.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.Description.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <!-- <label for=\"size\">Size</label> -->\n            <!-- <input type=\"text\" formControlName=\"size\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.size.errors }\" /> -->\n            <tag-input\n              class=\"tag\"\n              [(ngModel)]=\"size\"\n              formControlName=\"Size\"\n              placeholder=\"+Add Size\"\n            ></tag-input>\n            <div *ngIf=\"submitted && f.Size.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Size.errors.required\">Size is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"sizeFor\">For</label>\n            <!-- <input type=\"text\" formControlName=\"sizeFor\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.sizeFor.errors }\" /> -->\n            <div class=\"d-flex flex-direction-row justify-content-between mr-4\">\n              <div\n                class=\"form-check checkbox custom-control custom-radio custom-control-inline\"\n                *ngFor=\"let item of sizeFor\"\n              >\n                <input\n                  class=\"custom-control-input\"\n                  type=\"radio\"\n                  name=\"sizeFor\"\n                  [id]=\"item\"\n                  [value]=\"item\"\n                />\n                <label class=\"custom-control-label\" [for]=\"item\">\n                  {{item}}\n                </label>\n              </div>\n            </div>\n            <div class=\"d-flex mt-2\">\n              <div\n                class=\"custom-control custom-switch\"\n                *ngFor=\"let item of gender ;let i = index\"\n              >\n                <input\n                  type=\"checkbox\"\n                  class=\"custom-control-input\"\n                  [id]=\"item\"\n                />\n                <label class=\"custom-control-label\" [for]=\"item\"\n                  >{{item}}</label\n                >\n              </div>\n            </div>\n            <!-- <div *ngIf=\"submitted && f.sizeFor.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.sizeFor.errors.required\">First Name is required</div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"SellingPrice\">Selling Price</label>\n            <app-price-mover\n              [defaultVal]=\"100\"\n              [name]=\"'SellingPrice'\"\n              [addProductForm]=\"addProductForm\"\n            ></app-price-mover>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Color\">Color</label>\n            <input\n              type=\"text\"\n              formControlName=\"Color\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Color.errors }\"\n            />\n            <div *ngIf=\"submitted && f.Color.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.Color.errors.required\">Color is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"MRP\">MRP</label>\n            <app-price-mover\n              [defaultVal]=\"100\"\n              [name]=\"'MRP'\"\n              [addProductForm]=\"addProductForm\"\n            ></app-price-mover>\n\n            <div *ngIf=\"submitted && f.MRP.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.MRP.errors.required\">First Name is required</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"gst\">GST</label>\n            <input\n              type=\"text\"\n              formControlName=\"GST\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.GST.errors }\"\n            />\n            <div *ngIf=\"submitted && f.GST.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.GST.errors.required\">Color is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"TaxablePrice\">Taxable Price</label>\n            <input\n              type=\"text\"\n              formControlName=\"TaxablePrice\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.TaxablePrice.errors }\"\n            />\n            <div\n              *ngIf=\"submitted && f.TaxablePrice.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.TaxablePrice.errors.required\">\n                TaxablePrice is required\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"AvailabilityStatus\">Availability Status</label>\n            <!-- <input type=\"text\" formControlName=\"status\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n              <div\n                class=\"custom-control custom-switch\"\n                *ngFor=\"let item of status ;let i = index\"\n              >\n                <input\n                  type=\"checkbox\"\n                  class=\"custom-control-input\"\n                  [id]=\"item\"\n                />\n                <label class=\"custom-control-label\" [for]=\"item\"\n                  >{{item}}</label\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <div class=\"d-flex spec-div\">\n              <label class=\"flex-grow-1\" for=\"spec\">Specification</label>\n              <label class=\"text-right add-new\" (click)=\"add(key,value)\">\n                +Add</label\n              >\n            </div>\n            <div class=\"d-flex\">\n              <input\n                type=\"text\"\n                class=\"form-control col-sm-5\"\n                [(ngModel)]=\"key\"\n                placeholder=\"Key\"\n                [ngClass]=\"{ 'is-invalid': isError }\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (keyup)=\"isError=false;\"\n              />\n              <input\n                type=\"text\"\n                class=\"form-control col-sm-5 ml-2\"\n                [(ngModel)]=\"value\"\n                placeholder=\"value\"\n                [ngClass]=\"{ 'is-invalid':  isError  }\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (keyup)=\"isError=false;\"\n              />\n            </div>\n\n            <div\n              class=\"d-flex mx-1 mt-2\"\n              *ngFor=\"let item of specifications;let i = index\"\n            >\n              <label class=\"font-weight-bold spec col-sm-5\">\n                {{ item.key }}</label\n              >\n              <label class=\"spec col-sm-5\"> {{ item.value }}</label>\n              <button\n                type=\"button\"\n                class=\"close\"\n                aria-label=\"Close\"\n                (click)=\"delete(specifications,i)\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div\n              *ngIf=\"submitted && f.Specification.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.Specification.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"shipStatus\">Shipable</label>\n            <!-- <input type=\"text\" formControlName=\"shipStatus\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.shipStatus.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n\n              <div\n              class=\"form-check checkbox custom-control custom-radio custom-control-inline\"\n              *ngFor=\"let item of sizeFor\"\n            >\n              <input\n                class=\"custom-control-input\"\n                type=\"radio\"\n                name=\"sizeFor\"\n                [id]=\"item\"\n                [value]=\"item\"\n              />\n              <label class=\"custom-control-label\" [for]=\"item\">\n                {{item}}\n              </label>\n            </div>\n\n\n              <div\n                class=\"custom-control custom-switch\"\n                *ngFor=\"let item of shippableProductStatus ;let i = index\"\n              >\n                <input\n                  type=\"checkbox\"\n                  class=\"custom-control-input\"\n                  [id]=\"item\"\n                />\n                <label class=\"custom-control-label\" [for]=\"item\"\n                  >{{item}}</label\n                >\n              </div>\n            </div>\n\n            <div\n              *ngIf=\"submitted && f.shipStatus.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.shipStatus.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"Delivery\">Delivery Options</label>\n            <!-- <input type=\"text\" formControlName=\"Delivery\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f.Delivery.errors }\" /> -->\n            <div class=\"d-flex mt-2\">\n              <div\n                class=\"custom-control custom-switch\"\n                *ngFor=\"let item of deliveryOption ;let i = index\"\n              >\n                <input\n                  type=\"checkbox\"\n                  class=\"custom-control-input\"\n                  [id]=\"item.name\"\n                  formControlName=\"Delivery\"\n                  (change)=\"change(item.name,$event)\"\n                />\n                <label class=\"custom-control-label\" [for]=\"item.name\"\n                  >{{item.name}}</label\n                >\n              </div>\n            </div>\n            <div\n              *ngIf=\"submitted && f.Delivery.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.Delivery.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm\">\n          <div class=\"form-group\">\n            <label for=\"ShippingCost\">Shiping Charges</label>\n            <app-price-mover\n              [defaultVal]=\"100\"\n              [name]=\"'ShippingCost'\"\n              [addProductForm]=\"addProductForm\"\n            ></app-price-mover>\n            <div\n              *ngIf=\"submitted && f.ShippingCost.errors\"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"f.ShippingCost.errors.required\">\n                First Name is required\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer form-group\">\n      <button (click)=\"activeModal.dismiss('Cross click')\" class=\"btn cancel\">\n        Cancel\n      </button>\n      <button [disabled]=\"loading\" class=\"btn reg\">\n        <span\n          *ngIf=\"loading\"\n          class=\"spinner-border spinner-border-sm mr-1\"\n        ></span>\n        Add\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"background-color: #c0c4bd;\">\nFooter\n</div>\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from \"@angular/forms\";\n@Component({\n  selector: 'app-price-mover',\n  templateUrl: './price-mover.component.html',\n  styleUrls: ['./price-mover.component.scss']\n})\nexport class PriceMoverComponent implements OnInit ,AfterViewInit {\n@Input() name!:string;\n@Input() addProductForm!: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n//  console.log(this.addProductForm);\n//  console.log(this.name);\n    \n  }\n\n  ngAfterViewInit=()=>{\n    console.log(this.addProductForm);\n  }\n\n  get f() { return this.addProductForm.controls; }\n\n  increament(control1: string, value: number) {\n    this.addProductForm.patchValue({\n      [control1]: +this.f[control1].value + value\n    });\n  }\n\n  decreament(control1: string, value: number) {\n    this.addProductForm.patchValue({\n      [control1]: +this.f[control1].value - value\n    });\n  }\n}\n","<div class=\"d-flex mr-3\" [formGroup]=\"addProductForm\">\n    <img src=\"../../../../assets/images/minus.svg\" class=\"inc-dec pointer\" (click)=\"decreament(name,10)\"  />\n    <input type=\"text\" class=\"form-control text-center\" formControlName=\"{{name}}\"  [ngClass]=\"{ 'is-invalid': f[name].errors }\"\n     pattern=\"^[0-9]*$\" type=\"text\" maxlength=\"10\" placeholder=\"1111111111\"\n      onkeypress=\"return ( event.charCode !=8 && event.charCode ==0 || \n        (event.charCode >= 48 && event.charCode <= 57))\" autocomplete=\"off\" />\n    <img src=\"../../../../assets/images/plus.svg\" class=\"float-right inc-dec pointer\" (click)=\"increament(name,10)\"/>\n  </div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpService } from \"./http.service\";\nimport { map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  baseUrl = environment.baseUrl;\n  authUrl = environment.authUrl;\n  sellername = new BehaviorSubject<any>(\"User\");\n  constructor(private httpService: HttpService, private router: Router) {}\n\n  isLoggedIn = () => {\n    let user = JSON.parse(localStorage.getItem(\"USER\") || \"{}\");\n    this.sellername.next(user.storeName);\n    return !!localStorage.getItem(\"USER\");\n  };\n  logout = () => {\n    localStorage.removeItem(\"USER\");\n    localStorage.removeItem(\"AUTH_TOKEN\");\n    this.router.navigate([\"/\"]);\n  };\n  getState = () => {\n    let states = [\n      \"Andhra Pradesh\",\n      \"Arunachal Pradesh\",\n      \"Assam\",\n      \"Bihar\",\n      \"Chhattisgarh\",\n      \"Goa\",\n      \"Gujarat\",\n      \"Haryana\",\n      \"Himachal Pradesh\",\n      \"Jammu and Kashmir\",\n      \"Jharkhand\",\n      \"Karnataka\",\n      \"Kerala\",\n      \"Madhya Pradesh\",\n      \"Maharashtra\",\n      \"Manipur\",\n      \"Meghalaya\",\n    ];\n    return states;\n  };\n  getCity = () => {\n    let country = [\n      \"Afghanistan\",\n      \"Albania\",\n      \"Algeria\",\n      \"Andorra\",\n      \"Angola\",\n      \"Anguilla\",\n      \"India\",\n    ];\n    return country;\n  };\n\n  getToken = (param: any) => {\n    // return this._httpClient.post(environment.baseUrl + 'token', param);\n    return this.httpService\n      .post(environment.baseUrl + \"token\", param)\n      .pipe(map((data) => data));\n  };\n\n  generateOTP = (param: any) => {\n    return this.httpService\n      .post(environment.authUrl + \"account/GenerateOTP\", param)\n      .pipe(map((data) => data));\n  };\n  authorizeToken = (param: any) => {\n    const body = new HttpParams()\n      .set(\"username\", param.UserName)\n      .set(\"grant_type\", \"password\")\n      .set(\"password\", param.password);\n\n    return this.httpService\n      .post(environment.baseUrl + \"token\", body.toString(), this.getHeader())\n      .pipe(map((data) => data));\n  };\n\n  refreshToken = () => {\n    let user = JSON.parse(localStorage.getItem(\"USER\") || \"{}\");\n    const body = new HttpParams()\n      .set(\"grant_type\", \"refresh_token\")\n      .set(\"refresh_token\", user.refresh_token);\n    return this.httpService.post(\n      environment.baseUrl + \"token\",\n      body.toString(),\n      this.getHeader()\n    );\n  };\n  \n  registerSeller = (param: any) => {\n    return this.httpService.post(\n      environment.baseUrl + \"account/register\",\n      param,\n      { headers: this.getAuthHeader() }\n    );\n  };\n\n  private getAuthHeader = () => {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n    });\n    return headers;\n  };\n\n  getHeader = () => {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    });\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router  } from \"@angular/router\";\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  constructor(private _router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  gotoMyOrder=(route:string)=>{\n    this._router.navigateByUrl(route);\n  }\n}\n","<section class=\"d-flex justify-content-center mt-5\">\n    <div>\n        <label class=\"pointer\" (click)=\"gotoMyOrder('my-orders')\"> My Orders / </label>\n        <label class=\"font-weight-bold ml-2\"> Order-details</label>\n\n    </div>\n</section>\n\n<section class=\"card mt-3 shadow\" style=\"width: 70%;margin: 0 auto;\">\n    <div class=\"card-header d-flex\">\n        <div class=\"col-md-8 col-sm font-weight-bold\">Bill Details</div>\n        <div class=\"col-md-4 col-sm font-weight-bold\">Order Details</div>\n    </div>\n    <div class=\"card-body\">\n        <section class=\"d-flex row mb-2\">\n            <div class=\"col-md-8\">\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Customer Name</label>\n                    <label class=\"col-md-3 col-sm\">Rajesh Mishara</label>\n                </div>\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Delivery Address</label>\n                    <label class=\"col-md-6 col-sm\">Flat no 106\n                        Darshan Society, Dhanori, Pune Maharashtra\n                    </label>\n                </div>\n                <div>\n                    <label class=\"col-md-4 col-sm lbl\">Phone</label>\n                    <label class=\"col-md-3 col-sm\">9999222384</label>\n                </div>\n\n\n            </div>\n            <div class=\"col-md-4\">\n                <div> <label class=\"col-md-6 col-sm-6 lbl\">Order Date</label>\n                    <label class=\"col-md-6 col-sm-6\">24 July 20</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Order ID</label>\n                    <label class=\"col-md-6 col-sm-6\">ORDER123456</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Delivery Type</label>\n                    <label class=\"col-md-6 col-sm-6\">Home Delivery</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Delivery By</label>\n                    <label class=\"col-md-6 col-sm-6\">Royal Grocery Mart</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Payment</label>\n                    <label class=\"col-md-6 col-sm-6\">Online</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Order Amount</label>\n                    <label class=\"col-md-6 col-sm-6\"> ₹ 360</label>\n                </div>\n                <div>\n                    <label class=\"col-md-6 col-sm-6 lbl\">Status</label>\n                    <label class=\"col-md-6 col-sm-6\" style=\"color: #E09541;\">Recieved</label>\n                </div>\n            </div>\n        </section>\n\n        <label style=\"font-size: 15px;\">Order Summary</label>\n        <hr>\n        <section>\n            <div class=\"row d-flex align-items-baseline\">\n                <div class=\"col-md-3 col-sm\"> <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\"\n                        alt=\"Card image cap\" height=60 width=40></div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\"></label>\n                    <label class=\"d-flex lbl\">Dawat Rozana Rice</label></div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\">Qty</label>\n                    <label class=\"d-flex\">1</label>\n                </div>\n                <div class=\"col-md-3 col-sm\">\n                    <label class=\"d-flex lbl\">Total</label>\n                    <label class=\"d-flex\"> ₹ 100</label>\n                </div>\n\n            </div>\n        </section>\n    </div>\n\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContactComponent } from './component/contact/contact.component';\nimport { OrderDetailComponent } from './modules/my-orders/order-detail/order-detail.component';\nimport { AuthGuard } from \"./guard/auth.guard\";\nconst routes: Routes = [\n  { path: 'login',  loadChildren: () => import('./modules/login/login.module').then(m => m.LoginModule) },\n  { path: 'coupen', canActivate:[AuthGuard], loadChildren: () => import('./modules/coupen/coupen.module').then(m => m.CoupenModule) },\n  { path: 'home', canActivate:[AuthGuard],  loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule) },\n  { path: 'contact', component: ContactComponent },\n  { path: 'my-orders',canActivate:[AuthGuard],  loadChildren: () => import('./modules/my-orders/my-orders.module').then(m => m.MyOrdersModule) },\n  { path: 'order-detail', canActivate:[AuthGuard], component: OrderDetailComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  // { path: '**', component: lo },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{scrollPositionRestoration:'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<section class=\"d-flex justify-content-center mt-5\">\n    <ul *ngFor=\"let item of orderType\">\n        <li [ngClass]=\"{active: item===activeOrderList}\" (click)=\"activeOrderList=item\"> <a>{{item}}</a></li>\n    </ul>\n</section>\n\n\n<!--Accordion wrapper-->\n<div class=\"container accordion md-accordion\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\"\n    style=\"width: 80%;\">\n    <div class=\"card mb-3 shadow-sm\" *ngFor=\"let item of itemsList let i=index\">\n        <!-- Card header -->\n        <div class=\"card-header\" role=\"tab\" id=\"{{i}}\">\n            <a data-toggle=\"collapse\" data-parent=\"#accordionEx\" href=\"#random{{i}}\" aria-expanded=\"false\"\n                aria-controls=\"collapseOne1\">\n                <h5 class=\"mb-0\" (click)=\"active=i\" class=\"d-flex justify-content-between\">\n                    <section class=\"container\">\n                        <section class=\"px-1\">\n                            <section class=\"\">\n                                <section class=\"row\">\n                                    <div class=\"col-sm col-md\">\n                                        <article>Date</article>\n                                        <span>\n                                            24 July 20\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>OrderID</article>\n                                        <span>\n                                            ORD12346789\n                                        </span>\n                                    </div>\n\n\n\n                                    <div class=\"col-sm-2 col-md\">\n                                        <article>Mode of Payment</article>\n                                        <span>\n                                            online\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm-1 col-md\">\n                                        <article>Total</article>\n                                        <span>\n                                            ₹ 360\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>Delivery Type</article>\n                                        <span>\n                                            Home\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <article>Status</article>\n                                        <span style=\"color: #f89838 !important;\">Recieved</span>\n                                    </div>\n                                    <div class=\"col-sm col-md\">\n                                        <button class=\"btn btn-lg btn-block edit\" (click)=\"viewOrderDetails($event);false\">Order Details</button>\n                                    </div>\n                                </section>\n                            </section>\n                        </section>\n\n                    </section>\n                    <img src=\"../../../assets/images/arrow.svg\" class=\"align\" [ngClass]=\"{rotate: i===active}\">\n                </h5>\n            </a>\n        </div>\n\n        <!-- Card body -->\n        <div id=\"random{{i}}\" class=\"collapse\" [ngClass]=\"{show:i===0}\" role=\"tabpanel\" aria-labelledby=\"{{i}}\"\n            data-parent=\"#accordionEx\">\n            <div class=\"card-body row d-flex justify-content-around\">\n                <div class=\" row flex-1\">\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm col-md\">\n                        <div class=\"card border-15 shadow-sm\">\n                            <div class=\"card-horizontal\">\n                                <div class=\"img-square-wrapper\">\n                                    <img class=\"m-3\" src=\"../../../assets/images/dummy-image.png\" alt=\"Card image cap\"\n                                        height=60 width=40>\n                                </div>\n                                <div class=\"card-body\">\n                                    <p class=\"card-text m-0\">Britannia Wheate bread</p>\n                                    <section class=\"d-flex\">\n                                        <p style=\"flex: 1;\">Qty :2</p>\n                                        <p class=\"font-weight-bold\">₹100</p>\n                                    </section>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-3 col-md\">\n                    <article>Action</article>\n                    <select class=\"form-control form-select\" aria-label=\"Default select example\">\n                        <option selected>Open this select menu</option>\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <!-- Accordion card -->\n\n\n\n</div>\n<!-- Accordion wrapper -->","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router'\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.scss']\n})\nexport class MyOrdersComponent implements OnInit {\n  _showBtn: boolean=true;\n  screenHeight!: number;\n  screenWidth!: number;\n  constructor(private _router:Router) { }\n  _opened: boolean = true;\n \norderType=['New Orders','Completed Orders']\nactiveOrderList:string='New Orders';\nactive=0;\n  \nitemsList= [\n  {\n    title: 'Collapsible Group Item #1',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  },\n  {\n    title: 'Collapsible Group Item #2',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  },\n  {\n    title: 'Collapsible Group Item #3',\n    description: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\\'t heard of them accusamus labore sustainable VHS.'\n  }\n];\n\n  ngOnInit(): void {\n   \n  }\n\n  viewOrderDetails=(event:Event)=>{\n    this._router.navigate(['order-detail']);\n   event.stopPropagation();\n   \n  }\n\n\n \n  \n}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AddProductComponent } from \"../../../model/add-product/add-product.component\";\nimport { HostListerService } from \"../../../helper/host-lister.service\";\nimport { AppService } from \"../../../services/app.service\";\nimport { AuthService } from \"../../../services/auth.service\";\n\n@Component({\n  selector: \"app-page-setup\",\n  templateUrl: \"./page-setup.component.html\",\n  styleUrls: [\"./page-setup.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageSetupComponent implements OnInit {\n  editShopName: boolean = false;\n  screenHeight!: number;\n  screenWidth!: number;\n  _showBtn: boolean = true;\n  isAddressReadonly: boolean = true;\n  sellerLinkId: any = \"\";\n  address: any = {\n    AddressLine1: \"The AddressLine1 field is required.\",\n    AddressLine2: \"\",\n    AddressLine3: \"\",\n    City: \"\",\n    State: \"\",\n    Pin: \"\",\n  };\n  @Output() opened = new EventEmitter<string>();\n  @Input() userInfo: any;\n\n  pageObject = {\n    phoneNumber: { errorMessage: \"\" },\n    uniqueId: { errorMessage: \"\" },\n    shopName: { errorMessage: \"\" },\n    state: { errorMessage: \"The ShopName field is required\" },\n    addressLine1: { errorMessage: \"The AddressLine1 field is required.\" },\n    city: { errorMessage: \"The City field is required.\" },\n  };\n\n  constructor(\n    public modalService: NgbModal,\n    public service: AppService,\n    private _hostListerService: HostListerService,\n    private _authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getScreenSize();\n    this.address = { ...this.address, ...this.userInfo };\n  }\n  onPhoneChange() {\n    this.opened.emit();\n  }\n\n  shopName(value: any) {\n    this.pageObject.shopName.errorMessage =\n      value === \"\" ? \"The ShopName field is required\" : \"\";\n    this.userInfo.ShopName = value;\n  }\n\n  addressLine1(value: any) {\n    this.address[\"AddressLine1\"] = value;\n    this.userInfo[\"AddressLine1\"] = value;\n  }\n  addressLine2(value: any) {\n    this.userInfo[\"AddressLine2\"] = value;\n    this.address[\"AddressLine2\"] = value;\n  }\n  addressLine3(value: any) {\n    this.userInfo[\"AddressLine3\"] = value;\n    this.address[\"AddressLine3\"] = value;\n  }\n  addressCity(value: any) {\n    this.userInfo[\"City\"] = value;\n\n    this.address[\"City\"] = value;\n  }\n  addressState(value: any) {\n    this.pageObject.state.errorMessage =\n      value === \"\" ? \"The ShopName field is required\" : \"\";\n    this.userInfo[\"State\"] = value;\n    this.address[\"State\"] = value;\n  }\n  addressPin(value: any) {\n    this.address[\"Pin\"] = value;\n    this.userInfo[\"Pin\"] = value;\n  }\n  /**\n   * Set Contact Number\n   */\n  contactNumber(number: any) {\n    let regex = /^[6-9]\\d{9}$/;\n    this.pageObject.phoneNumber.errorMessage = !regex.test(number)\n      ? \"Invalid Phone Number\"\n      : \"\";\n    this.userInfo.Phone = number;\n  }\n  /**\n   * Check Unique Cde\n   */\n  uniqueId(id: any) {\n    this.service.validateUniqueId({ Id: id }).subscribe((res) => {\n      let msg = \"\";\n      if (res[\"ReturnType\"] === null) {\n        msg = res[\"ReturnMessage\"];\n      } else if (!res[\"ReturnType\"][\"SellerIdExists\"]) {\n        msg = res[\"ReturnMessage\"];\n      }\n      this.pageObject.uniqueId.errorMessage = msg;\n\n      this.sellerLinkId = res[\"ReturnType\"][\"SellerIdExists\"] ? id : \"\";\n      this.userInfo.UniqueId =\n        this.sellerLinkId !== \"\" ? this.sellerLinkId : this.userInfo.UniqueId;\n    });\n  }\n\n  getScreenSize() {\n    this.screenHeight = this._hostListerService.getScreenSize().screenHeight;\n    this.screenWidth = this._hostListerService.getScreenSize().screenWidth;\n    if (this.screenWidth < 576) {\n      this._showBtn = true;\n    } else {\n      this._showBtn = false;\n    }\n  }\n\n  saveUser = () => {\n    this._authService.registerSeller(this.userInfo).subscribe((res: any) => {\n      console.log(res);\n    });\n  };\n}\n","<p class=\"text-left font-weight-bold\">Setup your page</p>\n\n<app-float-text\n  label=\"Your Shop Name\"\n  [value]=\"userInfo.ShopName\"\n  type=\"textArea\"\n  [errorMsg]=\"pageObject.shopName.errorMessage\"\n  (onChange)=\"shopName($event)\"\n></app-float-text>\n\n<div class=\"border rounded-1 mt-2\">\n  <p class=\"mb-0\">\n    <small>Shope Address</small>\n    <span\n      class=\"float-right cursor-pointer\"\n      (click)=\"this.isAddressReadonly = !this.isAddressReadonly\"\n      ><small>Update</small></span\n    >\n  </p>\n  <app-readonly-input\n    inputValue=\"{{address.AddressLine1}}\"\n    placeholder=\"Enter Address Line1\"\n    [isReadonly]=\"isAddressReadonly\"\n    *ngIf=\"address.AddressLine1 || !isAddressReadonly\"\n    (valueChange)=\"addressLine1($event)\"\n  ></app-readonly-input>\n  <app-readonly-input\n    inputValue=\"{{address.AddressLine2}}\"\n    placeholder=\"Enter Address Line2\"\n    [isReadonly]=\"isAddressReadonly\"\n    *ngIf=\"address.AddressLine2 || !isAddressReadonly\"\n    (valueChange)=\"addressLine2($event)\"\n  ></app-readonly-input>\n  <app-readonly-input\n    inputValue=\"{{address.AddressLine3}}\"\n    placeholder=\"Enter Address Line3\"\n    [isReadonly]=\"isAddressReadonly\"\n    *ngIf=\"address.AddressLine3 || !isAddressReadonly\"\n    (valueChange)=\"addressLine3($event)\"\n  ></app-readonly-input>\n  <app-readonly-input\n    inputValue=\"{{address.City}}\"\n    placeholder=\"Enter City\"\n    *ngIf=\"address.City || !isAddressReadonly\"\n    [isReadonly]=\"isAddressReadonly\"\n    (valueChange)=\"addressCity($event)\"\n  ></app-readonly-input>\n  <app-readonly-input\n    inputValue=\"{{address.State}}\"\n    placeholder=\"Enter State\"\n    *ngIf=\"address.State || !isAddressReadonly||  pageObject.state.errorMessage !== ''\"\n    [isReadonly]=\"isAddressReadonly &&   !pageObject.state.errorMessage  \"\n    (valueChange)=\"addressState($event)\"\n  ></app-readonly-input>\n  <label *ngIf=\"pageObject.state.errorMessage\" class=\"label-err-msg\"\n    >{{pageObject.state.errorMessage}}</label\n  >\n  <app-readonly-input\n    inputValue=\"{{address.Pin}}\"\n    placeholder=\"Enter Pin\"\n    [isReadonly]=\"isAddressReadonly\"\n    *ngIf=\"address.Pin || !isAddressReadonly\"\n    (valueChange)=\"addressPin($event)\"\n  ></app-readonly-input>\n</div>\n<div class=\"mt-2\">\n  <app-float-text\n    label=\"Contact Number\"\n    [value]=\"userInfo.Phone\"\n    type=\"number\"\n    [errorMsg]=\"pageObject.phoneNumber.errorMessage\"\n    (onChange)=\"contactNumber($event)\"\n  ></app-float-text>\n</div>\n<div class=\"mt-2\">\n  <app-float-text\n    label=\"Unique ID\"\n    [value]=\"userInfo.UniqueId\"\n    type=\"text\"\n    [errorMsg]=\"pageObject.uniqueId.errorMessage\"\n    (onChange)=\"uniqueId($event)\"\n  ></app-float-text>\n</div>\n<div class=\"mt-2 mt-2 border-bottom\">\n  <p class=\"mb-0\">\n    <small>Unique Link</small>\n  </p>\n  <p>\n    <a\n      href=\"http://www.merasupermarket.com/{{sellerLinkId}}\"\n      target=\"_blank\"\n      style=\"word-break: break-all;\"\n      >www.merasupermarket.com/{{sellerLinkId}}</a\n    >\n  </p>\n</div>\n\n<div class=\"row mt-2\">\n  <div class=\"col text-center\">\n    <button class=\"btn create btn-block\" (click)=\"saveUser()\">Save</button>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}